package routines;

import java.text.SimpleDateFormat;
import java.util.Date;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class PGSUtilities {

    /**
     * helloExample: not return value, only print "hello" + message.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string("world") input: The string need to be printed.
     * 
     * {example} helloExemple("world") # hello world !.
     */
    public static void helloExample(String message) {
        if (message == null) {
            message = "World"; //$NON-NLS-1$
        }
        System.out.println("Hello " + message + " !"); //$NON-NLS-1$ //$NON-NLS-2$
    }
    
    /**
     * getKeyValueString: Accepts separate lists of comma separated keys and values, and returns a single string in key = value format .
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string("keys") input: A string having comma separated list of keys.
     * {param} string("values") input: A string having comma separated list of values.
     * 
     * {example} helloExemple("world") # hello world !.
     */
    public static String getKeyValueString(String keys, String values) {
        System.out.println("Keys="+keys+",Values="+values);
    	String[] KEYS = keys.split(",");
        String[] VALUES = values.split(",");
        StringBuffer string = new StringBuffer("");
        System.out.println(keys+"{}"+values);
        System.out.println((KEYS==null) + ""+ (VALUES==null));
        for(short i=0;i<KEYS.length;i++){
        	string.append(KEYS[i]+" = "+VALUES[i]+"\n");
        }
        
        return string.toString();
    }
    
    /**
     * getFormattedDate: Accepts a date and a format specification and returns the formatted date .
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} PGSUtilities
     * 
     * {param} Date("date") input: Date to be formatted.
     * {param} string("format") input: Format specification.
     * 
     * {example} getFormattedDate(new Date(), "yyyyMMdd") # 20141231.
     */
    public static String getFormattedDate(Date date, String format){
    	SimpleDateFormat dt1 = new SimpleDateFormat(format);
    	return dt1.format(date);
    }
}
