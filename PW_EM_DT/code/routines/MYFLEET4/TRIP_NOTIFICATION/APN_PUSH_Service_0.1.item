package routines;

import java.util.List;

import org.apache.log4j.BasicConfigurator;
import org.json.JSONException;

import javapns.Push;
import javapns.communication.ProxyManager;
import javapns.communication.exceptions.CommunicationException;
import javapns.communication.exceptions.KeystoreException;
import javapns.notification.PushNotificationPayload;
import javapns.notification.PushedNotification;
import javapns.notification.ResponsePacket;

public class APN_PUSH_Service {

	/**
	 * @param args
	 */
	public static void SendPushNotification (String strCertPath,String strCertPwd,String strToken, String strMessage, Boolean blnCertFlag){

				BasicConfigurator.configure();
		try{
			    
		        PushNotificationPayload payload = PushNotificationPayload.complex();
		        //int Paylength = payload.getPayloadSize();
		        payload.addAlert(strMessage);
		        payload.addBadge(1);
		        payload.addSound("default");
		        payload.addCustomDictionary("id", "1");
		        
		        System.out.println("Before sending...");		        
		        List<PushedNotification> NOTIFICATIONS =  Push.payload(payload, strCertPath, strCertPwd, blnCertFlag, strToken);
		        System.out.println("PUSH NOTIFICATION SENT SUCCESSFULLY");
		        
		        
		        for (PushedNotification NOTIFICATION : NOTIFICATIONS) {
		            if (NOTIFICATION.isSuccessful()) {
		                    /* APPLE ACCEPTED THE NOTIFICATION AND SHOULD DELIVER IT */  
		                    System.out.println("PUSH NOTIFICATION SENT SUCCESSFULLY TO: " +
		                                                    NOTIFICATION.getDevice().getToken());
		                    /* STILL NEED TO QUERY THE FEEDBACK SERVICE REGULARLY */  
		            } 
		            else {
		                    String INVALIDTOKEN = NOTIFICATION.getDevice().getToken();
		                    /* ADD CODE HERE TO REMOVE INVALIDTOKEN FROM YOUR DATABASE */  

		                    /* FIND OUT MORE ABOUT WHAT THE PROBLEM WAS */  
		                    Exception THEPROBLEM = NOTIFICATION.getException();
		                    THEPROBLEM.printStackTrace();

		                    /* IF THE PROBLEM WAS AN ERROR-RESPONSE PACKET RETURNED BY APPLE, GET IT */  
		                    ResponsePacket THEERRORRESPONSE = NOTIFICATION.getResponse();
		                    if (THEERRORRESPONSE != null) {
		                            System.out.println(THEERRORRESPONSE.getMessage());
		                    }
		            }
		      }

	    } catch (CommunicationException e) {
	        // TODO Auto-generated catch block
	        e.printStackTrace();
	    } catch (KeystoreException e) {
	        // TODO Auto-generated catch block
	        e.printStackTrace();
	    } catch (JSONException e) {
	        // TODO Auto-generated catch block
	        e.printStackTrace();
	    }			

	}

}
