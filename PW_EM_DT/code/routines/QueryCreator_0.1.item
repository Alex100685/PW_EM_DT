package routines;

import java.io.BufferedWriter;
import java.io.FileOutputStream;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.ArrayList;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class QueryCreator {

    /**
     * helloExample: not return value, only print "hello" + message.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string("world") input: The string need to be printed.
     * 
     * {example} helloExemple("world") # hello world !.
     */
    public static void InsertQueryCreator(String table_Name,String Schema_Name) {
    	
    	String columnName[] = new String[100];
		String columnType[] = new String[100];
		ArrayList<String> insertStatements = new ArrayList<String>();
		String tableName =table_Name; //"Excelupload";
		String schemaName =Schema_Name;// "pgsdwh";
		String basicinsert = null;
		int columnCount = 0;

		try {
			// step1 load the driver class
			//Class.forName("org.postgresql.Driver");//

			// step2 create the connection object
			Connection con = DriverManager.getConnection(
					"jdbc:postgresql://alpgpdbgp2dev.idc.ge.com:5432/pgsdwh",
					"502336065", "sso502pass01");

			// step3 create the statement object
			Statement stmt = con.createStatement();

			// step4 execute query
			ResultSet rs = stmt
					.executeQuery("Select * from "+schemaName+"."+tableName);
			while (rs.next()) {

				ResultSetMetaData rmd = rs.getMetaData();
				tableName = rmd.getTableName(1);
				
				columnCount = rmd.getColumnCount();
				
			/*	System.out.println("Table Name" + tableName);
				System.out.println("Schema Name" + schemaName);
				System.out.println("column Count" + columnCount);*/
				
				
				
				
				basicinsert = new String();
				basicinsert = "insert into " + schemaName + "." + tableName+" (";
				
				for (int i = 1; i < columnCount; i++) {
					columnName[i] = rmd.getColumnName(i);
					columnType[i] = rmd.getColumnTypeName(i);

				}
				
				for (int i = 1; i < columnCount; i++) {
					basicinsert+=columnName[i]+",";

				}
				basicinsert = basicinsert
						.substring(0, basicinsert.length() - 1);
				basicinsert+= ") values(";
				for (int i = 0; i < columnCount; i++) {
					if (columnType[i] == "numeric") {
						basicinsert += rs.getInt(i) + ",";
					}
					if (columnType[i] == "varchar") {
						if(rs.getString(i)!=null)
						{
						basicinsert += "'" + rs.getString(i) + "'" + ",";
						}
						else
						{
							basicinsert += null+",";
						}
					}
					if (columnType[i] == "float") {
						basicinsert += rs.getFloat(i) + ",";
					}

				}
				basicinsert = basicinsert
						.substring(0, basicinsert.length() - 1);
				basicinsert += ");";
				
				insertStatements.add(basicinsert);
			}
			
			try (Writer writer = new BufferedWriter(new OutputStreamWriter(
					new FileOutputStream("C:/Users/791001.TCSGEGDC/filename.txt"), "utf-8"))) {
			for (String x : insertStatements) {
				System.out.println(x);
				
					writer.write(x);
					writer.write("\r\n");
				}
			}

			con.close();

		} catch (Exception e) {
			System.out.println(e);
		}

	
      /*  if (message == null) {
            message = "World"; //$NON-NLS-1$
        }
        System.out.println("Hello " + message + " !"); //$NON-NLS-1$ //$NON-NLS-2$*/
    }
  /*  public static void main(String[] args) {

		}*/
}
