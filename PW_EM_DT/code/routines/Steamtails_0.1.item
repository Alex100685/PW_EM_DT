package routines;

import java.io.*;
import java.sql.*;

      
public class Steamtails {


   String url = "jdbc:postgresql://alpgpdbgp2dev.idc.ge.com:5432/pgsdwh";
//String url = "jdbc:postgresql://alpgpdbgp2prd.idc.ge.com:5432/pgsdwh";

    String username = "212485199"; 
    String password = "unh12806yesss";

int counter,counter1=0;
String plant, block, unit, system, equip_type, oem,status, country, region;
String block2,gt_count,st_count,plant2; //values from dev
String old_val; //storage value for old unit id, use as compare to current unit id in loop
String old_val_plant, unit_val;
String total_val, total_val1; // sum of counts for gt and st
String gt1,gt2,gt3,gt4,gt5,gt6,st1,st2,st3,st4,gt1_hrsg,gt2_hrsg,gt3_hrsg,gt4_hrsg = null;
String gt1_oem,gt2_oem,gt3_oem,gt4_oem,gt5_oem,gt6_oem,st1_oem,st2_oem,st3_oem;
String gt1_status,gt2_status,gt3_status,gt4_status,st1_status,st2_status,st3_status;
String gt1_equip_class,gt2_equip_class,gt3_equip_class,gt4_equip_class;
String is_a_steam_unit, was_null=null;

String gib_sn, equip_class, stag_code;
String gt1_sn, gt2_sn, gt3_sn,gt4_sn,st1_sn, st2_sn, st3_sn;

String gt1_gen,gt2_gen,gt3_gen,gt4_gen,gt5_gen,gt6_gen,st1_gen,st2_gen,st3_gen;
String gt1_gen_sn, gt2_gen_sn, gt3_gen_sn,gt4_gen_sn,st1_gen_sn,st2_gen_sn,st3_gen_sn;
String gt1_gen_oem, gt2_gen_oem, gt3_gen_oem,gt4_gen_oem,st1_gen_oem,st2_gen_oem,st3_gen_oem;
String gt1_gen_status, gt2_gen_status, gt3_gen_status,gt4_gen_status,st1_gen_status,st2_gen_status,st3_gen_status;

String gt1_stag_code, region1, country1;

String related_sn1;
String gt1_related,st1_related;
            
Connection cn=null; //postgres connection
Connection cn2=null; //sqlite connection	

  PreparedStatement stmt,stmt2,stmt3= null;                

int count_steam=0;
int count_gas=0;
int count_steam2=0;
int count_gas2=0;
int count_boi2=0;
//int count_oem2=0;
int count_gen2, count_gen_st=0;
int gen_count; //count gens for each unit

public void loadDriver() {


		           //connection to sqlite

				try {

		         
		          Class.forName("org.sqlite.JDBC");
				  System.out.println("SQLITE Driver loaded successfully!");
				}   catch (Exception E1) {
			          System.out.println("Unable to load the sqlite Driver!");
				  System.out.println("Exceptions:" + E1.toString());
				  System.exit(1);
				}

						
			 //Establishing the connection with the database
					
				try {
				        //cn2 = DriverManager.getConnection("jdbc:sqlite:test.db");
                cn2 = DriverManager.getConnection("jdbc:sqlite:c:\\glassfish3\\jdk\\bin\\test.db");
                                             //change this when publishing
					System.out.println("Connection to SQLITE was Established");
			        } catch (Exception E2) {
					System.out.println(" Exceptions : " + E2.toString());
			        }




  //second connection to postgres

    try {
    	Class.forName("org.postgresql.Driver");
	System.out.println("The Postgres Driver loaded successfully!");
    	}
    	   catch (Exception e) {
    	          System.err.println("Unable to load postgres driver.");
    	}  
    
	  try {
		cn = DriverManager.getConnection(url,username,password);
		
		   }
		   catch (SQLException e) {
		System.err.println("Unable to get beyond initial postgres connection");
		          e.printStackTrace();
		   }

		   System.err.println("both drivers and connections initiated");


			} // end of load driver method




public void getBlocks() {
    
    try{

               //stmt3=cn2.prepareStatement("select * from steamtails");
                 stmt3=cn2.prepareStatement("select * from steamtails2");
              						 
			ResultSet rs = stmt3.executeQuery();              
			while (rs.next()) {

				 plant=rs.getString("plant_id");
                                 block=rs.getString("block_id");
                                 unit=rs.getString("unit_id");
                                 system=rs.getString("sys_id");
                                 equip_type=rs.getString("sys_type");
                                 oem=rs.getString("mfr_group");
                                 status=rs.getString("status");
                                 gib_sn=rs.getString("gib_serial_no");
                                 equip_class=rs.getString("equip_class");
                                 stag_code=rs.getString("stag_code");
                                 region=rs.getString("region");
                                 country=rs.getString("country");
                                 related_sn1=rs.getString("related_sn1");
                                 counter=counter+1; //or counter++
                                                         
                  if(counter==1){  
                                    //counter will only be 1 once so it grabs 1st block value, no need for else here
                                     //on next pass and subsequent passes counter will not = 1
                                   
                      place(); //put current val of block id in holding area outside loops and call it old_val
                      place1(); //value of current unit
                      count_gas2=1; //reset this here so row 1 does not skip gt1
                      count_boi2=1;
                      count_gen2=1;
                      //count_gen2=0; 
                      count_gen_st=1;
                      //count_turbines(); //turbine count for 1st row
                      count_units(); //count unit in 1st result
                                           }  // end of first if, just to establish initial placeholders
                
                                       //must use .= here, second pass starts here
                  if(block.equals(old_val)){ 
                                  
                                 //do these counts while block has cur val
            	
                               count_turbines();
                               count_units();

                                           } //end block if statement

                                     else {
                                             System.out.println("we have a new block");
                                         System.out.println("gen count from previous pass= "+gen_count);


               //on this pass current val of block is not = to old_val but need old_val for insert
                              
                           insert();         //insert all previous counted during while loop and create new line
                                place();           //put new value of block in storage place after insert                                        // is_a_steam_unit="no";
                                count_turbines(); //count turbines before new block
                                count_units();     
                                
                                          } //end else
                           
	 						 
			 } //end rs

//stmt=cn.prepareStatement("delete from pgsbizdim.cc1_test2");
//stmt.executeUpdate();

                    
 } //end of try block

	    
      catch (Exception e) {
         
     } 

			} // end of get blocks method



       //storage area for val of block id, so we can compare current val to old val on each pass

public void place() {

old_val_plant=plant;
old_val=block;
unit_val=unit;
//count_gen2=0;
                     //need to check to see if a steam unit when we enter a new block
 if(equip_type.equals("Steam Turbine")){
                                         System.out.println("this is a steam unit");
                                          is_a_steam_unit="yes";
                                     // System.out.println(is_a_steam_unit);
                                        
                                                                         }
     else {is_a_steam_unit="no";

           }
}
 
        // storage area for val of unit id at each pass of new unit
public void place1() {
                   //need to check to see if a steam unit when we enter a new unit
unit_val=unit;
//count_gen2=0; //reset this for each new unit so if no gen is found then we skip to next gen position for next pass

       if(equip_type.equals("Steam Turbine")){
                                         System.out.println("this is a steam unit");
                                          is_a_steam_unit="yes";
                                     // System.out.println(is_a_steam_unit);
                                        
                                                                         }
     else {is_a_steam_unit="no";

           }

} 

               // insert each pass into datalake dev
public void insert() {

	try{

	//stmt2=cn.prepareStatement("insert into pgsbizdim.cc1_test (plant_id, block_id, count_gt, count_st, gt1_gt, gt2_gt, gt3_gt, st1_st, st2_st) values (?,?,?,?,?,?,?,?,?)");
//stmt2=cn.prepareStatement("insert into pgsbizdim.cc1_test (plant_id, block_id, count_gt, count_st, gt1_gt, gt2_gt, gt3_gt, st1_st, st2_st) values (?,?,?,?,?,?,?,?,?)");

//stmt2=cn.prepareStatement("insert into pgsbizdim.cc1_test2 (plant_id, block_id, count_gt, count_st, gt1_gt, gt2_gt, gt3_gt, st1_st, st2_st) values (?,?,?,?,?,?,?,?,?)");

         

 stmt2=cn.prepareStatement("insert into pgsbizdim.cc1_test2 (plant_id, block_id, count_gt, count_st, gt1_gt, gt2_gt, gt3_gt, st1_st, st2_st,gt4_gt,gt1_hrsg,gt2_hrsg,gt3_hrsg,gt4_hrsg,gt1_gt_mfr_group,gt2_gt_mfr_group,gt3_gt_mfr_group,gt4_gt_mfr_group,gt1_gt_gib_sn,gt1_gt_equip_class,gt1_gt_stag_code,gt2_gt_gib_sn,gt3_gt_gib_sn,gt4_gt_gib_sn,gt2_gt_equip_class,gt3_gt_equip_class,gt4_gt_equip_class,gt1_gen,gt2_gen,gt3_gen,gt4_gen,st1_gen,st3_st,st4_st,gt1_gt_status,gt2_gt_status,gt3_gt_status,gt4_gt_status,region,country,gt1_gt_gib_sn_related1,st1_st_mfr_group,st2_st_mfr_group,st3_st_mfr_group,st1_st_status,st2_st_status,st3_st_status,st2_gen,st3_gen,gt1_gen_mfr_group,gt2_gen_mfr_group,gt3_gen_mfr_group,gt4_gen_mfr_group,st1_gen_mfr_group,st2_gen_mfr_group,st3_gen_mfr_group,gt1_gen_gib_sn,gt2_gen_gib_sn,gt3_gen_gib_sn,gt4_gen_gib_sn,st1_gen_gib_sn,st2_gen_gib_sn,st3_gen_gib_sn,st1_st_gib_sn,st2_st_gib_sn,st3_st_gib_sn,st1_st_gib_sn_related1,gt1_gen_status,gt2_gen_status,gt3_gen_status,gt4_gen_status,st1_gen_status,st2_gen_status,st3_gen_status) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

    
    stmt2.setString(1,old_val_plant); 
    //stmt2.setString(2,block);
    stmt2.setString(2,old_val); //needs old val because once we get to else, with new block, we want the previous block here
    stmt2.setString(3,total_val); 
    stmt2.setString(4,total_val1);
    stmt2.setString(5,gt1); 
    stmt2.setString(6,gt2);
    stmt2.setString(7,gt3);
    stmt2.setString(8,st1);
    stmt2.setString(9,st2);
    stmt2.setString(10,gt4);
stmt2.setString(11,gt1_hrsg);
stmt2.setString(12,gt2_hrsg);
stmt2.setString(13,gt3_hrsg);
stmt2.setString(14,gt4_hrsg);
stmt2.setString(15,gt1_oem);
stmt2.setString(16,gt2_oem);
stmt2.setString(17,gt3_oem);
stmt2.setString(18,gt4_oem);
/*
stmt2.setString(21,gt5);
stmt2.setString(22,gt6);
      
   stmt2.setString(29,gt5_gen);
   stmt2.setString(30,gt6_gen);
*/

   stmt2.setString(19,gt1_sn);
   stmt2.setString(20,gt1_equip_class);
   stmt2.setString(21,gt1_stag_code);
stmt2.setString(22,gt2_sn);
stmt2.setString(23,gt3_sn);
stmt2.setString(24,gt4_sn);
stmt2.setString(25,gt1_equip_class);
stmt2.setString(26,gt1_equip_class);
stmt2.setString(27,gt1_equip_class);
stmt2.setString(28,gt1_gen);
   stmt2.setString(29,gt2_gen);
   stmt2.setString(30,gt3_gen);
   stmt2.setString(31,gt4_gen);
stmt2.setString(32,st1_gen);
 stmt2.setString(33,st3);
      stmt2.setString(34,st4);
stmt2.setString(35,gt1_status);
stmt2.setString(36,gt2_status);
stmt2.setString(37,gt3_status);
stmt2.setString(38,gt4_status);
stmt2.setString(39,region1);
stmt2.setString(40,country1);
stmt2.setString(41,gt1_related);
stmt2.setString(42,st1_oem);
stmt2.setString(43,st2_oem);
stmt2.setString(44,st3_oem);
stmt2.setString(45,st1_status);
stmt2.setString(46,st2_status);
stmt2.setString(47,st3_status);
stmt2.setString(48,st2_gen);
stmt2.setString(49,st3_gen);
stmt2.setString(50,gt1_gen_oem);
stmt2.setString(51,gt2_gen_oem);
stmt2.setString(52,gt3_gen_oem);
stmt2.setString(53,gt4_gen_oem);
stmt2.setString(54,st1_gen_oem);
stmt2.setString(55,st2_gen_oem);
stmt2.setString(56,st3_gen_oem);
stmt2.setString(57,gt1_gen_sn);
stmt2.setString(58,gt2_gen_sn);
stmt2.setString(59,gt3_gen_sn);
stmt2.setString(60,gt4_gen_sn);
stmt2.setString(61,st1_gen_sn);
stmt2.setString(62,st2_gen_sn);
stmt2.setString(63,st3_gen_sn);

stmt2.setString(64,st1_sn);
stmt2.setString(65,st2_sn);
stmt2.setString(66,st3_sn);
stmt2.setString(67,st1_related);

stmt2.setString(68,gt1_gen_status);
stmt2.setString(69,gt2_gen_status);
stmt2.setString(70,gt3_gen_status);
stmt2.setString(71,gt4_gen_status);
stmt2.setString(72,st1_gen_status);
stmt2.setString(73,st2_gen_status);
stmt2.setString(74,st3_gen_status);
   //did not set these back to null after insert

                                            
    stmt2.executeUpdate();

          //clear all variables right after insert
     count_steam=0; //when new block set steam counter back to 0
     count_gas=0; //when new block set gas counter back to 0
     total_val = "0";
     total_val1 ="0";
     gt1=null; gt2=null; gt3=null; gt4=null; st1=null; st2=null;gt5=null;gt6=null;st3=null; st4=null;
     gt1_hrsg=null; gt2_hrsg=null; gt3_hrsg=null; gt4_hrsg=null;
     gt1_oem=null; gt2_oem=null; gt3_oem=null; gt4_oem=null; st1_oem=null; st2_oem=null; st3_oem=null;
     gt1_status=null; gt2_status=null; gt3_status=null; gt4_status=null; st1_status=null; st2_status=null; st3_status=null;

     gt1_gen=null;
     gt2_gen=null; gt3_gen=null; gt4_gen=null;gt5_gen=null; gt6_gen=null;
     st1_gen=null;st2_gen=null;st3_gen=null;
     gt1_gen_oem=null;gt2_gen_oem=null; gt3_gen_oem=null; gt4_gen_oem=null;
     st1_gen_oem=null;st2_gen_oem=null;st3_gen_oem=null;

     count_steam2=1; 
     count_gas2=1;
     count_boi2=1;
     count_gen2=1;
    // count_gen2=0; 
     count_gen_st=1;

     gt1_equip_class=null; gt1_sn=null;  gt1_stag_code=null;
     gt2_sn=null;gt3_sn=null;gt4_sn=null;st1_sn=null;st2_sn=null;st3_sn=null;
     gt2_equip_class=null;gt3_equip_class=null;gt4_equip_class=null;

     gt1_gen_sn=null;gt2_gen_sn=null;gt3_gen_sn=null;gt4_gen_sn=null;
     st1_gen_sn=null;st2_gen_sn=null;st3_gen_sn=null;
} //end of try block


catch (Exception e) {
   
           } 

}  //end of method


public void count_units() {

	try{
                 
                          if(unit.equals(unit_val)){
                              
                                    
                                 count_turbines2();

            	            }

                          else{

                                  System.out.println("we have a new unit");
                            System.out.println(unit);
                           // System.out.println("gen count from previous pass= "+gen_count);

                                //before resetting back to 0 check for nulls in gen 1, then do gen 2 later
                                //if gen count from previous pass still = 0 skip
                            if (gen_count==0 && is_a_steam_unit=="no") {count_gen2=count_gen2+1;  gt1_gen = "no gen";
                                                                           count_gen2=2;}
                                

                                //at start of each unit set gen count to 0
                            gen_count=0; //reset back to 0
                                 // System.out.println("gen count = "+gen_count);
                                        
                        
                              // need this here and in place1
                              
                                is_a_steam_unit="no";   //reset this here, assume no unless yes
              
                    if(equip_type.equals("Steam Turbine")){
                                          System.out.println("this is a steam unit");
                                          is_a_steam_unit="yes";
                                      //System.out.println(is_a_steam_unit);
                                                          }
         
                               count_turbines2();
                               place1();  //we have a new unit so put new val in place1
                          
                            } //end else


} //end of try block

catch (Exception e) {
   
         } 

} //end method


                      // iterate thru equip types for each unit pass and check for nulls too
public void count_turbines2() {

	try{
                                  System.out.println(block);
		if(equip_type.equals("Gas Turbine")){
                           //System.out.println(unit);
                           //System.out.println(system);
                               if(count_gas2==1) { gt1=system;gt1_oem=oem;gt1_status=status;
                                                   gt1_equip_class=equip_class;gt1_sn=gib_sn;
                                                   gt1_stag_code=stag_code;
                                                   region1=region;
                                                   country1=country; gt1_related=related_sn1;
                                                    }
                                      //System.out.println(count_gas2);
                                     // System.out.println("GT1 = "+system);
                                      // System.out.println("GT1 = "+oem);
                            // System.out.println("GT1 gen = "+gt1_gen);
                                  
                               if(count_gas2==2) { gt2=system;gt2_oem=oem;
                                                    gt2_status=status;
                                                    gt2_sn=gib_sn;
                                                   gt2_equip_class=equip_class;
                                                    } 
                                      //System.out.println(count_gas2);
                                      //System.out.println("GT2 = "+system);
                               if(count_gas2==3) { gt3=system;gt3_oem=oem;
                                                   gt3_status=status;
                                                   gt3_sn=gib_sn;
                                                   gt3_equip_class=equip_class;
                                                    }
                                     // System.out.println(count_gas2);
                                     // System.out.println("GT3 = "+system);                 
                               if(count_gas2==4) { gt4=system;gt4_oem=oem;
                                                    gt4_status=status;
                                                     gt4_sn=gib_sn;
                                                   gt4_equip_class=equip_class;                                                    } 
                                     // System.out.println(count_gas2);
                                     // System.out.println("GT4 = "+system);
                               if(count_gas2==5) { gt5=system;gt5_oem=oem;}
                               if(count_gas2==6) { gt6=system;gt6_oem=oem;} 
			count_gas2=count_gas2+1;
                          
						}

		else if(equip_type.equals("Steam Turbine")){
                                 System.out.println(system);
                               if(count_steam2==1) { st1=system;st1_oem=oem;st1_status=status;st1_sn=gib_sn;st1_related=related_sn1;}
                                     // System.out.println(count_steam2);
                                      //System.out.println("ST1 = "+system);
                               if(count_steam2==2) { st2=system;st2_oem=oem;st2_status=status;st2_sn=gib_sn;}
                               if(count_steam2==3) { st3=system;st3_oem=oem;st3_status=status;st3_sn=gib_sn;}
                               if(count_steam2==4) { st4=system;}
			count_steam2=count_steam2+1;
                                                }

                else if(equip_type.equals("Boiler")){

                            if(count_boi2==1) { gt1_hrsg=system;} 
                                // System.out.println("GT1 boi = "+system);         
                            if(count_boi2==2) { gt2_hrsg=system;} 
                                 //System.out.println("GT2 boi = "+system);
                            if(count_boi2==3) { gt3_hrsg=system;}
                                 //System.out.println("GT3 boi = "+system);
                            if(count_boi2==4) { gt4_hrsg=system;}
                                 //System.out.println("GT4 boi = "+system);
                             count_boi2=count_boi2+1;
                               			}


                  
                else if(equip_type.equals("Generator")){

                               // System.out.println("we have a generator");
                                 // System.out.println(system);
                               // System.out.println("count_gen2 = "+count_gen2);
                           
                                      //check to see if it belongs to steam unit first
                          if(is_a_steam_unit=="yes"){
                                           //assign result vals from source table to string vars, then insert string vars into target table and do same below for gts
                                      if(count_gen_st==1) {st1_gen=system;st1_gen_oem=oem;st1_gen_sn=gib_sn;st1_gen_status=status;}
                                      if(count_gen_st==2) {st2_gen=system;st2_gen_oem=oem;st2_gen_sn=gib_sn;st2_gen_status=status;}
                                      if(count_gen_st==3) {st3_gen=system;st3_gen_oem=oem;st3_gen_sn=gib_sn;st3_gen_status=status;}
                                  count_gen_st=count_gen_st+1;

                        is_a_steam_unit="no"; //set back to no
                       // count_gen2=0; //coming out of st unit set gen to 0 otherwise it is always at 1
                        gen_count=1;
                                          }

                    //steam unit is no
                                  
                            else if(is_a_steam_unit=="no"){ 
                                 //System.out.println("gen is not a steam unit");
                                   // System.out.println(system);
                                // System.out.println("count_gen2 = "+count_gen2);
                                                            
                            if(count_gen2==1) { gt1_gen=system;gt1_gen_oem=oem;gt1_gen_sn=gib_sn;gt1_gen_status=status;}
                            if(count_gen2==2) { gt2_gen=system;gt2_gen_oem=oem;gt2_gen_sn=gib_sn;gt2_gen_status=status;}
                            if(count_gen2==3) { gt3_gen=system;gt3_gen_oem=oem;gt3_gen_sn=gib_sn;gt3_gen_status=status;}
                            if(count_gen2==4) { gt4_gen=system;gt4_gen_oem=oem;gt4_gen_sn=gib_sn;gt4_gen_status=status;}
                           // if(count_gen2==5) { gt5_gen=system;}
                           // if(count_gen2==6) { gt6_gen=system;}
                                count_gen2=count_gen2+1;  
                            gen_count=1;
                           
                                         } //end if st=no


                                } // end original else if

            //after finishing everything up in this method if no gens found in GT1 gen then skip a line for next pass
                 //System.out.println("we are finished counting gens in a unit, gen count= "+gen_count);  
                if(gen_count==0) {//System.out.println("there are no gens for this unit");

                                                  }
                                
} //end of try block

catch (Exception e) {
   
         } 

} //end method

                         //count number of turbines for each block
public void count_turbines() {

	try{
                                  //System.out.println(block);
		if(equip_type.equals("Gas Turbine")){
                           
			count_gas=count_gas+1;
			total_val = String.valueOf(count_gas);
			//System.out.println(total_val + " = number of gt in block");
						}

		else if(equip_type.equals("Steam Turbine")){
                              
			count_steam=count_steam+1;
			total_val1 = String.valueOf(count_steam);
			//System.out.println(total_val1 + " = number of st in block");
                       				}
} //end of try block

catch (Exception e) {
   
         } 

} //end method

	public static void run() throws IOException {
	//public static void main(String[] args) throws IOException {


		Steamtails ManageRecords = new Steamtails(); 

                 
		  ManageRecords.loadDriver();
                  ManageRecords.getBlocks();
                             
		
	}  //end of main method


}  //end of class