package routines;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class GEFinanceRoutine {

    /**
     * helloExample: not return value, only print "hello" + message.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string("world") input: The string need to be printed.
     * 
     * {example} helloExemple("world") # hello world !.
     */
    public static void helloExample(String message) {
        if (message == null) {
            message = "World"; //$NON-NLS-1$
        }
        System.out.println("Hello " + message + " !"); //$NON-NLS-1$ //$NON-NLS-2$
    }
    
    /**
     * getDurationString: converts seconds into X hours Y minutes Z seconds format
     * 
     * 
     * {talendTypes} int
     * 
     * {Category} User Defined
     * 
     * {param} int(seconds) input: The duration in seconds.
     * 
     * {example} getDurationString(120) yields in 2:00.
     */
    
    public static String getDurationString(int seconds) {

    	if( seconds == -1) {
    		return "Error";
    	}
        int hours = seconds / 3600;
        int minutes = (seconds % 3600) / 60;
        seconds = seconds % 60;
        
        if (hours > 0) {
        	return twoDigitString(hours) + ":" + twoDigitString(minutes) + ":" + twoDigitString(seconds);
        } else {
        	return twoDigitString(minutes) + ":" + twoDigitString(seconds);
        }
        
    }

    /**
     * getDurationString2: converts seconds into X h Y min Z sec format
     * 
     * 
     * {talendTypes} int
     * 
     * {Category} User Defined
     * 
     * {param} int(seconds) input: The duration in seconds.
     * 
     * {example} getDurationString(121) yields in 2min 01sec.
     */
    
    public static String getDurationString2(int seconds) {

    	if( seconds == -1) {
    		return "Error";
    	}
        int hours = seconds / 3600;
        int minutes = (seconds % 3600) / 60;
        seconds = seconds % 60;
        
        if (hours > 0) {
        	return hours + "h " + minutes + "min";
        } else { 
        	if (minutes > 0) {
        	return minutes + "min";
        	   }
        	else return twoDigitString(seconds) + "sec";
        }
    }
    
    
    private static String twoDigitString(int number) {

        if (number == 0) {
            return "00";
        }

        if (number / 10 == 0) {
            return "0" + number;
        }

        return String.valueOf(number);
    }
}
    
    
    
    
    
  