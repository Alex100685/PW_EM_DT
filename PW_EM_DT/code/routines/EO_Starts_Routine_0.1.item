package routines;
import java.util.Calendar;




/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class EO_Starts_Routine {

    /**
     * helloExample: not return value, only print "hello" + message.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string("world") input: The string need to be printed.
     * 
     * {example} helloExemple("world") # hello world !.
     */
    public static void helloExample(String message) {
        if (message == null) {
            message = "World"; //$NON-NLS-1$
        }
        System.out.println("Hello " + message + " !"); //$NON-NLS-1$ //$NON-NLS-2$
    }
    
    public static String DateGroupFunction(int seq,int totalrows ) {
        int rows=totalrows/5;  //as there are batch of 5 which are created for date group
        
        int firstrow=rows*1;
        int secondrow=rows*2;
        int thirdrow=rows*3;
        int fourthrow=rows*4;
        int fifthrow=rows*5;
        
    	int seqMod = seq%totalrows;
    	if (seqMod<=firstrow && seqMod > 0) 
        {
        return "1";
        }
        
        if (seqMod>firstrow && seqMod<=secondrow) 
        {
        return "2";
        }
        
        if (seqMod>secondrow && seqMod<=thirdrow) 
        {
        return "3";
        }
        
        if (seqMod>thirdrow && seqMod<=fourthrow) 
        {
        return "4";
        }
        
        if ((seqMod>fourthrow && seqMod<=fifthrow)||seqMod==0) 
        {
        return "5";
        }
        
        System.out.println(seq);
        return "";
    }
    
    public static String StartDateFunction(int seq,int totalrows) {
        int rows=totalrows/5;  //as there are batch of 5 which are created for date group
        
        int firstrow=rows*1;
        int secondrow=rows*2;
        int thirdrow=rows*3;
        int fourthrow=rows*4;
        int fifthrow=rows*5;
        
    	
    	int seqMod = seq%totalrows;
    String startdate="";	
    	if (seqMod<=firstrow && seqMod > 0)  //for date group 1 the start is from first day of first month of the year
        {
    		startdate="1-JAN-";
    		startdate=startdate+TalendDate.formatDate("yyyy",TalendDate.getCurrentDate()); 
        return startdate;
        }
        
        if (seqMod>firstrow && seqMod<=secondrow)  //for date group 2 the start is difference of 1 month
        {
            startdate=TalendDate.addDate(TalendDate.formatDate("dd-MMM-yyyy",TalendDate.getCurrentDate()),"dd-MMM-yyyy",-1,"MM");	
            return startdate;
        }
        
        if (seqMod>secondrow && seqMod<=thirdrow)  //for date group 3 the start is difference of 3 months
        {
            startdate=TalendDate.addDate(TalendDate.formatDate("dd-MMM-yyyy",TalendDate.getCurrentDate()),"dd-MMM-yyyy",-3,"MM");	
            return startdate;
        }
        
        if (seqMod>thirdrow && seqMod<=fourthrow)  //for date group 4 the start is difference of 6 months
        {
        	startdate=TalendDate.addDate(TalendDate.formatDate("dd-MMM-yyyy",TalendDate.getCurrentDate()),"dd-MMM-yyyy",-6,"MM");	
        	return startdate;
        }
        
        
        if ((seqMod>fourthrow && seqMod<=fifthrow)||seqMod==0)   //for date group 5 the start is difference of 24 months
        {
        	startdate=TalendDate.addDate(TalendDate.formatDate("dd-MMM-yyyy",TalendDate.getCurrentDate()),"dd-MMM-yyyy",-24,"MM");;
        	return startdate;
        }
        System.out.println(seq);
        return "";
    }
    
    
    
    
    public static String DateGroupFunction_old(int seq ) {
        int seqMod = seq%180;
    	if (seqMod<=36 && seqMod > 0) 
        {
        return "1";
        }
        
        if (seqMod>36 && seqMod<=72) 
        {
        return "2";
        }
        
        if (seqMod>72 && seqMod<=108) 
        {
        return "3";
        }
        
        if (seqMod>108 && seqMod<=144) 
        {
        return "4";
        }
        
        if ((seqMod>144 && seqMod<=180)||seqMod==0) 
        {
        return "5";
        }
        
        System.out.println(seq);
        return "";
    }
    
    public static String StartDateFunction_old(int seq) {
    	int seqMod = seq%180;
    String startdate="";	
    	if (seqMod<=36 && seqMod > 0)  //for date group 1 the start is from first day of first month of the year
        {
    		startdate="1-JAN-";
    		startdate=startdate+TalendDate.formatDate("yyyy",TalendDate.getCurrentDate()); 
        return startdate;
        }
        
        if (seqMod>36 && seqMod<=72)  //for date group 2 the start is difference of 1 month
        {
            startdate=TalendDate.addDate(TalendDate.formatDate("dd-MMM-yyyy",TalendDate.getCurrentDate()),"dd-MMM-yyyy",-1,"MM");	
            return startdate;
        }
        
        if (seqMod>72 && seqMod<=108)  //for date group 3 the start is difference of 3 months
        {
            startdate=TalendDate.addDate(TalendDate.formatDate("dd-MMM-yyyy",TalendDate.getCurrentDate()),"dd-MMM-yyyy",-3,"MM");	
            return startdate;
        }
        
        if (seqMod>108 && seqMod<=144)  //for date group 4 the start is difference of 6 months
        {
        	startdate=TalendDate.addDate(TalendDate.formatDate("dd-MMM-yyyy",TalendDate.getCurrentDate()),"dd-MMM-yyyy",-6,"MM");	
        	return startdate;
        }
        
        if ((seqMod>144 && seqMod<=180)||seqMod==0)   //for date group 5 the start is difference of 24 months
        {
        	startdate=TalendDate.addDate(TalendDate.formatDate("dd-MMM-yyyy",TalendDate.getCurrentDate()),"dd-MMM-yyyy",-24,"MM");
        	return startdate;
        }
        
        /*if ((seqMod>144 && seqMod<=180)||seqMod==0)   //for date group 5 the start is from 1/1/13
        {
        	startdate= "1-JAN-2013";
        	return startdate;
        }*/
        System.out.println(seq);
        return "";
    }
}
