<?xml version="1.0" encoding="UTF-8" standalone="no"?><talendfile:ProcessType xmlns:talendfile="platform:/resource/org.talend.model/model/TalendFile.xsd" xmlns:xmi="http://www.omg.org/XMI" defaultContext="Default" jobType="Standard" xmi:version="2.0">
  <context confirmationNeeded="false" name="Default">
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Database" prompt="GP_EM_DT_ETL_FSSO_502800684_Database?" promptNeeded="false" repositoryContextId="_7GQccAUFEems6bufoXyGDg" type="id_String" value="pgsdwh"/>
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Login" prompt="GP_EM_DT_ETL_FSSO_502800684_Login?" promptNeeded="false" repositoryContextId="_7GQccAUFEems6bufoXyGDg" type="id_String" value="502800684"/>
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Password" prompt="GP_EM_DT_ETL_FSSO_502800684_Password?" promptNeeded="false" repositoryContextId="_7GQccAUFEems6bufoXyGDg" type="id_Password" value="UUKOPGTUys9/ZlGr9rcILg=="/>
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Port" prompt="GP_EM_DT_ETL_FSSO_502800684_Port?" promptNeeded="false" repositoryContextId="_7GQccAUFEems6bufoXyGDg" type="id_String" value="443"/>
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Schema" prompt="GP_EM_DT_ETL_FSSO_502800684_Schema?" promptNeeded="false" type="id_String" value="sot_dt"/>
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Server" prompt="GP_EM_DT_ETL_FSSO_502800684_Server?" promptNeeded="false" repositoryContextId="_7GQccAUFEems6bufoXyGDg" type="id_String" value="dev-gpclient-pwr.cloud.digital.ge.com"/>
  </context>
  <context confirmationNeeded="false" name="PROD">
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Database" prompt="GP_EM_DT_ETL_FSSO_502800684_Database?" promptNeeded="false" repositoryContextId="_7GQccAUFEems6bufoXyGDg" type="id_String" value="pgsdwh"/>
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Login" prompt="GP_EM_DT_ETL_FSSO_502800684_Login?" promptNeeded="false" repositoryContextId="_7GQccAUFEems6bufoXyGDg" type="id_String" value="502800684"/>
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Password" prompt="GP_EM_DT_ETL_FSSO_502800684_Password?" promptNeeded="false" repositoryContextId="_7GQccAUFEems6bufoXyGDg" type="id_Password" value="UUKOPGTUys9YSHOKWDERoQ=="/>
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Port" prompt="GP_EM_DT_ETL_FSSO_502800684_Port?" promptNeeded="false" repositoryContextId="_7GQccAUFEems6bufoXyGDg" type="id_String" value="443"/>
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Schema" prompt="GP_EM_DT_ETL_FSSO_502800684_Schema?" promptNeeded="false" type="id_String" value="sot_dt"/>
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Server" prompt="GP_EM_DT_ETL_FSSO_502800684_Server?" promptNeeded="false" repositoryContextId="_7GQccAUFEems6bufoXyGDg" type="id_String" value="gpclient-pwr.cloud.digital.ge.com"/>
  </context>
  <context confirmationNeeded="false" name="DEV">
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Database" prompt="GP_EM_DT_ETL_FSSO_502800684_Database?" promptNeeded="false" repositoryContextId="_7GQccAUFEems6bufoXyGDg" type="id_String" value="pgsdwh"/>
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Login" prompt="GP_EM_DT_ETL_FSSO_502800684_Login?" promptNeeded="false" repositoryContextId="_7GQccAUFEems6bufoXyGDg" type="id_String" value="502800684"/>
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Password" prompt="GP_EM_DT_ETL_FSSO_502800684_Password?" promptNeeded="false" repositoryContextId="_7GQccAUFEems6bufoXyGDg" type="id_Password" value="UUKOPGTUys9/ZlGr9rcILg=="/>
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Port" prompt="GP_EM_DT_ETL_FSSO_502800684_Port?" promptNeeded="false" repositoryContextId="_7GQccAUFEems6bufoXyGDg" type="id_String" value="443"/>
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Schema" prompt="GP_EM_DT_ETL_FSSO_502800684_Schema?" promptNeeded="false" type="id_String" value="sot_dt"/>
    <contextParameter comment="" name="GP_EM_DT_ETL_FSSO_502800684_Server" prompt="GP_EM_DT_ETL_FSSO_502800684_Server?" promptNeeded="false" repositoryContextId="_7GQccAUFEems6bufoXyGDg" type="id_String" value="dev-gpclient-pwr.cloud.digital.ge.com"/>
  </context>
  <parameters>
    <elementParameter field="TEXT" name="SCREEN_OFFSET_X" show="false" value="0"/>
    <elementParameter field="TEXT" name="SCREEN_OFFSET_Y" show="false" value="0"/>
    <elementParameter field="TEXT" name="REPOSITORY_CONNECTION_ID" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_PROPERTY_TYPENAME" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_HADOOP_DISTRIBUTION" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_HADOOP_VERSION" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_ENABLE_KERBEROS" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_NAME_NODE_PRINCIPAL" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_USERNAME" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_GROUP" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_USE_KEYTAB" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_KT_PRINCIPAL" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_KEY_TAB" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_ENABLE_OO_KERBEROS" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_NAME_NODE_END_POINT" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_JOB_TRACKER_ENDPOINT" show="false" value=""/>
    <elementParameter field="TEXT" name="OOZIE_END_POINT" show="false" value=""/>
    <elementParameter field="CHECK" name="IMPLICITCONTEXT_USE_PROJECT_SETTINGS" show="false" value="true"/>
    <elementParameter field="CHECK" name="STATANDLOG_USE_PROJECT_SETTINGS" show="false" value="true"/>
    <elementParameter field="CHECK" name="MULTI_THREAD_EXECATION" value="false"/>
    <elementParameter field="TEXT" name="PARALLELIZE_UNIT_SIZE" value="25000"/>
    <elementParameter field="CHECK" name="IMPLICIT_TCONTEXTLOAD" value="false"/>
    <elementParameter field="RADIO" name="FROM_FILE_FLAG_IMPLICIT_CONTEXT" show="false" value="false"/>
    <elementParameter field="RADIO" name="FROM_DATABASE_FLAG_IMPLICIT_CONTEXT" show="false" value="false"/>
    <elementParameter field="FILE" name="IMPLICIT_TCONTEXTLOAD_FILE" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="FIELDSEPARATOR" show="false" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="PROPERTY_TYPE_IMPLICIT_CONTEXT:PROPERTY_TYPE" show="false" value=""/>
    <elementParameter field="TECHNICAL" name="PROPERTY_TYPE_IMPLICIT_CONTEXT:REPOSITORY_PROPERTY_TYPE" show="false" value=""/>
    <elementParameter field="CLOSED_LIST" name="DB_TYPE_IMPLICIT_CONTEXT" show="false" value=""/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION_IMPLICIT_CONTEXT" show="false" value=""/>
    <elementParameter field="TEXT" name="URL_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TABLE" name="DRIVER_JAR_IMPLICIT_CONTEXT" show="false"/>
    <elementParameter field="TEXT" name="DRIVER_CLASS_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="HOST_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="PORT_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="DBNAME_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="LOCAL_SERVICE_NAME_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="PROPERTIES_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="SCHEMA_DB_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="USER_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="PASSWORD" name="PASS_IMPLICIT_CONTEXT" show="false" value="0RMsyjmybrE="/>
    <elementParameter field="FILE" name="DBFILE_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="DBTABLE" name="DBTABLE_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="QUERY_CONDITION_IMPLICIT_CONTEXT" show="false" value="&quot;&quot;"/>
    <elementParameter field="CLOSED_LIST" name="LOAD_NEW_VARIABLE" show="false" value="Warning"/>
    <elementParameter field="CLOSED_LIST" name="NOT_LOAD_OLD_VARIABLE" show="false" value="Warning"/>
    <elementParameter field="CHECK" name="PRINT_OPERATIONS" show="false" value="false"/>
    <elementParameter field="CHECK" name="DISABLE_ERROR" show="false" value="false"/>
    <elementParameter field="CHECK" name="DISABLE_WARNINGS" show="false" value="false"/>
    <elementParameter field="CHECK" name="DISABLE_INFO" show="false" value="false"/>
    <elementParameter field="CHECK" name="ON_STATCATCHER_FLAG" value="false"/>
    <elementParameter field="CHECK" name="ON_LOGCATCHER_FLAG" value="false"/>
    <elementParameter field="CHECK" name="ON_METERCATCHER_FLAG" value="false"/>
    <elementParameter field="CHECK" name="ON_CONSOLE_FLAG" show="false" value="false"/>
    <elementParameter field="CHECK" name="ON_FILES_FLAG" show="false" value="false"/>
    <elementParameter field="DIRECTORY" name="FILE_PATH" show="false" value="&quot;C:/Workspaces/6_3 Dev/.metadata&quot;"/>
    <elementParameter field="TEXT" name="FILENAME_STATS" show="false" value="&quot;stats_file.txt&quot;"/>
    <elementParameter field="TEXT" name="FILENAME_LOGS" show="false" value="&quot;logs_file.txt&quot;"/>
    <elementParameter field="TEXT" name="FILENAME_METTER" show="false" value="&quot;meter_file.txt&quot;"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" show="false" value="ISO-8859-15"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" show="false" value="ISO-8859-15"/>
    <elementParameter field="CHECK" name="ON_DATABASE_FLAG" show="false" value="false"/>
    <elementParameter field="CLOSED_LIST" name="DB_TYPE" show="false" value="tJDBCOutput"/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION" show="false" value="ORACLE_11"/>
    <elementParameter field="TEXT" name="URL" show="false" value="&quot;&quot;"/>
    <elementParameter field="TABLE" name="DRIVER_JAR" show="false"/>
    <elementParameter field="TEXT" name="DRIVER_CLASS" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="HOST" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="PORT" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="DATASOURCE" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="DBNAME" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="LOCAL_SERVICE_NAME" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="PROPERTIES" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="SCHEMA_DB" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="USER" show="false" value="&quot;&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" show="false" value="0RMsyjmybrE="/>
    <elementParameter field="FILE" name="DBFILE" show="false" value="&quot;&quot;"/>
    <elementParameter field="DBTABLE" name="TABLE_STATS" show="false" value="&quot;&quot;"/>
    <elementParameter field="DBTABLE" name="TABLE_LOGS" show="false" value="&quot;&quot;"/>
    <elementParameter field="DBTABLE" name="TABLE_METER" show="false" value="&quot;&quot;"/>
    <elementParameter field="CHECK" name="CATCH_RUNTIME_ERRORS" show="false" value="true"/>
    <elementParameter field="CHECK" name="CATCH_USER_ERRORS" show="false" value="true"/>
    <elementParameter field="CHECK" name="CATCH_USER_WARNING" show="false" value="true"/>
    <elementParameter field="CHECK" name="CATCH_REALTIME_STATS" show="false" value="false"/>
    <elementParameter field="TEXT" name="HEADERFOOTER_HEADERID" show="false" value=""/>
    <elementParameter field="CHECK" name="HEADER_ENABLED" show="false" value="false"/>
    <elementParameter field="TEXT" name="HEADER_LIBRARY" show="false" value=""/>
    <elementParameter field="TEXT" name="HEADER_CODE" show="false" value=""/>
    <elementParameter field="TEXT" name="HEADER_IMPORT" show="false" value=""/>
    <elementParameter field="TEXT" name="HEADERFOOTER_FOOTERID" show="false" value=""/>
    <elementParameter field="CHECK" name="FOOTER_ENABLED" show="false" value="false"/>
    <elementParameter field="TEXT" name="FOOTER_LIBRARY" show="false" value=""/>
    <elementParameter field="TEXT" name="FOOTER_CODE" show="false" value=""/>
    <elementParameter field="TEXT" name="FOOTER_IMPORT" show="false" value=""/>
    <routinesParameter id="_v_En0JAxEeifRow1DkYMwg" name="DQTechnical"/>
    <routinesParameter id="_v948EJAxEeifRow1DkYMwg" name="DataMasking"/>
    <routinesParameter id="_vztFUJAxEeifRow1DkYMwg" name="DataOperation"/>
    <routinesParameter id="_v-lfoJAxEeifRow1DkYMwg" name="DataQualityDependencies"/>
    <routinesParameter id="_v-CtEJAxEeifRow1DkYMwg" name="DataQuality"/>
    <routinesParameter id="_v-3McJAxEeifRow1DkYMwg" name="DqStringHandling"/>
    <routinesParameter id="_v8dYsJAxEeifRow1DkYMwg" name="Mathematical"/>
    <routinesParameter id="_v8uecJAxEeifRow1DkYMwg" name="Numeric"/>
    <routinesParameter id="_v81MIJAxEeifRow1DkYMwg" name="Relational"/>
    <routinesParameter id="_v_OY0JAxEeifRow1DkYMwg" name="SQLike"/>
    <routinesParameter id="_v9QC4JAxEeifRow1DkYMwg" name="StringHandling"/>
    <routinesParameter id="_v9WJgJAxEeifRow1DkYMwg" name="TalendDataGenerator"/>
    <routinesParameter id="_v9cQIJAxEeifRow1DkYMwg" name="TalendDate"/>
    <routinesParameter id="_v9wZMJAxEeifRow1DkYMwg" name="TalendString"/>
    <routinesParameter id="_6SlQwLngEeWZRqCmUwZjEg" name="AeroTest"/>
    <routinesParameter id="_rQ0H8MuIEeOReKos6ufrHA" name="BigDecHandler"/>
    <routinesParameter id="_bv_6oG1IEeSBz6HqJDET5w" name="BigDecimalUtility"/>
    <routinesParameter id="_dgMRgJjFEeWXRKcrF23Jtg" name="Box"/>
    <routinesParameter id="_SMoR4LtaEeOZvrcjg-VOXA" name="BuildQuery"/>
    <routinesParameter id="_2FpUoFjxEeaPJKNKhHQFGw" name="ByteUtil"/>
    <routinesParameter id="_etJUoGVcEeaZNdZqmDETww" name="Country_name"/>
    <routinesParameter id="_MdSFEAedEea7O6DdJifjLA" name="CustomFunctions"/>
    <routinesParameter id="_tKnvACWCEeWXaZA-MQIdVg" name="ConvertAnyDateFormat"/>
    <routinesParameter id="_iOxDYJnNEeeuI46T9lvVrg" name="wordfrequency"/>
    <routinesParameter id="_JGk_sDJ0EeScCNC66LLS6Q" name="DataTypeMaps"/>
    <routinesParameter id="_lTJkoEKbEeWD4KoNH7eRkw" name="DateLogic"/>
    <routinesParameter id="_8qwkYFjNEdyj6eiqDt60Og" name="DemoRoutines"/>
    <routinesParameter id="_IqdfkG55EeS4l_bl4TtF1g" name="MatlabWrapperServiceImplementationPortBindingStub"/>
    <routinesParameter id="_NDgjcG55EeS4l_bl4TtF1g" name="MatlabWrapperServiceImplementationServiceLocator"/>
    <routinesParameter id="_K8aUEG55EeS4l_bl4TtF1g" name="MatlabWrapperServiceImplementationService"/>
    <routinesParameter id="_O-xWQG55EeS4l_bl4TtF1g" name="MatlabWrapperServiceInterface"/>
    <routinesParameter id="_NAsyQHRnEeS6QfVO9XSNjQ" name="ServiceImplPortBindingStub"/>
    <routinesParameter id="_PVccEHRnEeS6QfVO9XSNjQ" name="ServiceImplServiceLocator"/>
    <routinesParameter id="_ObeHIHRnEeS6QfVO9XSNjQ" name="ServiceImplService"/>
    <routinesParameter id="_QMSkgHRnEeS6QfVO9XSNjQ" name="ServiceInterface"/>
    <routinesParameter id="_m1he4JyuEeSGQIxyh69dVA" name="EO_Starts_Routine"/>
    <routinesParameter id="_66aSoJD_EeSLcfAwV1BCsw" name="EO_Values_Routine"/>
    <routinesParameter id="_7ZjHcOlsEeSVveUAOdysxw" name="Exanta"/>
    <routinesParameter id="_8qb_IKf6EeOxOahYIIWftA" name="FormatDate"/>
    <routinesParameter id="_Hc9lgNd6EeOnOOburoyA_A" name="GEDynamicRoutine"/>
    <routinesParameter id="_av2tQBysEeSjiPClJfsz9g" name="GEDynamicRoutine_masking"/>
    <routinesParameter id="_SthZkHjnEeak44npEUA9gw" name="GEDynamicroutine_CLOB_BLOB"/>
    <routinesParameter id="_D6JiAA55EeW4b-Eku1f5NQ" name="GEFinanceRoutine"/>
    <routinesParameter id="_zibUsBZ6EeSAToaxZA-osw" name="GEPostgreSQLViewConverter"/>
    <routinesParameter id="_v3dJ4EqUEea-GriBfMtm_Q" name="GE_CustomRoutines"/>
    <routinesParameter id="_4aqMYKq1EeOJ7OfbfHqp1A" name="GEroutines"/>
    <routinesParameter id="_6POf0NCdEeOM8OmeleCgvg" name="GPLoadRoutine"/>
    <routinesParameter id="_HKXfQGIZEd26GZmhFZLTPA" name="GetRandomPhoneNum"/>
    <routinesParameter id="_PfOiEKKSEeW6a6IagvKPxw" name="HTMLunit"/>
    <routinesParameter id="_G417gAc-EeKqOMQjhZ_0wQ" name="KeyManagementForSqoop"/>
    <routinesParameter id="_SySNEMRNEeSFEeVgnXlPGw" name="LeftpaddingString"/>
    <routinesParameter id="__S6roKlpEeGiea4NxOFRoA" name="MDM"/>
    <routinesParameter id="_whP3wFrkEeWU-s6dkfBsWA" name="BasicHttpBinding_ITripServiceAsyncStub"/>
    <routinesParameter id="_1zOHsFrkEeWU-s6dkfBsWA" name="OutageType"/>
    <routinesParameter id="_BBx_IDmbEeelAr4c7wATkQ" name="Methods"/>
    <routinesParameter id="_kKQdAO6yEeK1vYN4B_KFqA" name="MyDateConversion"/>
    <routinesParameter id="_0ObKcBU6EeSkA-VeDqihSg" name="MyRoutineDemo"/>
    <routinesParameter id="_FZGCcPnFEeamVotwSwYnfA" name="MyRoutineDemo_1"/>
    <routinesParameter id="_YZ8c8GePEeWpTPdIyoXiCQ" name="MyRoutines"/>
    <routinesParameter id="_NXd5sLaIEeiFsdawRn1TAw" name="OC5"/>
    <routinesParameter id="_hESiUHAHEeShw6csv49m7w" name="PGSUtilities"/>
    <routinesParameter id="_0cxqEKjAEeWk7KZ2XdQZ4Q" name="PageScraperTest"/>
    <routinesParameter id="_ohn_QK5pEeWt7Ln6p0KPag" name="PageScraperTest_Copy"/>
    <routinesParameter id="_uaBjsKL9EeWyoeGNf8RevA" name="PageScraper"/>
    <routinesParameter id="_NOi2UL-FEeWmgNFzfW9xGA" name="PageScraper_bid_offer"/>
    <routinesParameter id="_IbolANSOEeWaBOKfRvQP6Q" name="PageScraper_market_price"/>
    <routinesParameter id="_n-uXkNGJEeW2fdG5IrM9wg" name="Pmar"/>
    <routinesParameter id="_chUnQHB_Ed6oFM5S1Wl1-A" name="PopulateFromDynamic"/>
    <routinesParameter id="_mXJM8LxxEeaIx_3yPWU-lg" name="QueryCreation"/>
    <routinesParameter id="_ddHaULDCEeaJfqG0-L1GDQ" name="QueryCreator"/>
    <routinesParameter id="_x2FF8OntEeW3ytw6yZxb9g" name="Spain_I90DIA"/>
    <routinesParameter id="_GWfu8LDAEeaJfqG0-L1GDQ" name="Sqlinsertstmt"/>
    <routinesParameter id="_mYXUAB1gEeeOFO7LwaomJw" name="Steamtails"/>
    <routinesParameter id="_Zj8TgJAKEeS5pt80QJ-lyg" name="Substring_ssl_path"/>
    <routinesParameter id="_S0NcwAi4Eee2RYmUvkdMoQ" name="TableauFieldRenaming"/>
    <routinesParameter id="_5dK-AAihEeesiMkRFlkuAQ" name="TableauRenaming"/>
    <routinesParameter id="__bCHIL1AEeardYT6h_WIQw" name="Tableau_Image_Download"/>
    <routinesParameter id="_lxjokHGmEeWkc6aZ-Zn0Bw" name="TermProcessor"/>
    <routinesParameter id="_7rdeANjfEea0ZZYWiMNiAQ" name="Test111"/>
    <routinesParameter id="_cKiiQBfHEee6yIlgKhBezw" name="Train_Config"/>
    <routinesParameter id="_eLKRABfZEee6yIlgKhBezw" name="Train_Configurator"/>
    <routinesParameter id="_l0JrkFdnEeerGsT5o8zyBg" name="Trains"/>
    <routinesParameter id="_YW0bYDQ8EeSu464odb4xqw" name="TransformMetadata"/>
    <routinesParameter id="_LPhh0BPFEeexdbfXM6XnYw" name="UOM"/>
    <routinesParameter id="_YPo3QKMgEeWyoeGNf8RevA" name="UnitArray"/>
    <routinesParameter id="_Q7jeABlLEee3B-1_17GT0w" name="UpdatesForPlantPlans"/>
    <routinesParameter id="_B7VwoKuMEeSsT_r6rjuoig" name="UserDefined"/>
    <routinesParameter id="_Yi7DgPKcEeWIaMYT0k35pg" name="com_ge_datacoe_boxhelper"/>
    <routinesParameter id="_QsKzoKfxEeOZiNBwFUKsew" name="convertDateFormat"/>
    <routinesParameter id="_vAkWYONuEeiomPreCo0kFQ" name="count_file_lines"/>
    <routinesParameter id="_qAoTcGouEeSyGah8667RdQ" name="customRoutinesII"/>
    <routinesParameter id="_cwjYsGX1EeSB4YnitS8Etw" name="customRoutines"/>
    <routinesParameter id="_0wVRcGBBEeW5LJowN3hCUw" name="fichierRef"/>
    <routinesParameter id="_e9oV0M9UEeSsyNN12pKk0A" name="insertTimeToDate"/>
    <routinesParameter id="_yYDTYNUrEeOb04uaGEm5UA" name="ishJava"/>
    <routinesParameter id="_8jCnoD-oEeeVapWlCNRPxQ" name="navl_handling"/>
    <routinesParameter id="_CMGowO3iEeaPlJ3lmiLxVA" name="pfd_load"/>
    <routinesParameter id="_O0o_wG6wEea8WISfDx04yQ" name="rConvertLOB"/>
    <routinesParameter id="_ZChZEGBVEeSqTZT6TnSmHA" name="stringToDouble"/>
    <routinesParameter id="_YK_e8NQ1EeKQo8vOQHoo0g" name="string_to_date"/>
    <routinesParameter id="_6-D2EIaXEeSlz9GF_8ZE1w" name="string_trim"/>
    <routinesParameter id="_JEJF8Gf9EeiSesbO2wogEg" name="test123"/>
    <routinesParameter id="_8dP48KMgEeWyoeGNf8RevA" name="test1"/>
    <routinesParameter id="_13a2cLNvEeO16cZM61HkCQ" name="test_FW"/>
    <routinesParameter id="_z241UFBXEeOKMaQAHUALEA" name="timeline_events_comments_documents"/>
    <routinesParameter id="_fnthMHQyEeWRuI-p_fGGPw" name="to_UTC"/>
    <routinesParameter id="_BKT9QCxEEeiEhJZVppe8Hg" name="user_substract"/>
    <routinesParameter id="_90-PQNW2EeejGb3Gj6GBNA" name="user_sum"/>
    <routinesParameter id="_86O8gGTlEeSMmotslQmEdA" name="ClarifyInformation"/>
    <routinesParameter id="_9jet0GTlEeSMmotslQmEdA" name="ITripServiceAsync"/>
    <routinesParameter id="_-MDwwGTlEeSMmotslQmEdA" name="Outages"/>
    <routinesParameter id="_-1V-UGTlEeSMmotslQmEdA" name="TripEvent"/>
    <routinesParameter id="__etEYGTlEeSMmotslQmEdA" name="TripInformation"/>
    <routinesParameter id="_AHUjkGTmEeSMmotslQmEdA" name="TripNotifierEvents"/>
    <routinesParameter id="_Av5mgGTmEeSMmotslQmEdA" name="TripQuery"/>
    <routinesParameter id="_CqnmwGTmEeSMmotslQmEdA" name="TripServiceLocator"/>
    <routinesParameter id="_CCGOMGTmEeSMmotslQmEdA" name="TripService"/>
    <routinesParameter id="_BZNCMGTmEeSMmotslQmEdA" name="Trips"/>
    <routinesParameter id="_rJV7sIRxEeqbPcwPO7GjHA" name="TalendStringUtil"/>
  </parameters>
  <node componentName="tGreenplumConnection" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="64" posY="96">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tGreenplumConnection_1"/>
    <elementParameter field="TECHNICAL" name="PROPERTY:PROPERTY_TYPE" value="REPOSITORY"/>
    <elementParameter field="TECHNICAL" name="PROPERTY:REPOSITORY_PROPERTY_TYPE" show="false" value="_wlBSUAUFEems6bufoXyGDg"/>
    <elementParameter field="TEXT" name="HOST" value="context.GP_EM_DT_ETL_FSSO_502800684_Server"/>
    <elementParameter field="TEXT" name="TYPE" show="false" value="GREENPLUM"/>
    <elementParameter field="TEXT" name="PORT" value="context.GP_EM_DT_ETL_FSSO_502800684_Port"/>
    <elementParameter field="TEXT" name="DBNAME" value="context.GP_EM_DT_ETL_FSSO_502800684_Database"/>
    <elementParameter field="TEXT" name="SCHEMA_DB" value="context.GP_EM_DT_ETL_FSSO_502800684_Schema"/>
    <elementParameter field="TEXT" name="USER" value="context.GP_EM_DT_ETL_FSSO_502800684_Login"/>
    <elementParameter field="PASSWORD" name="PASS" value="8pW6Nmy2kud5QlYQdAWu3Er4D1OQS62boYHNLAdopv8VyR8EHGdgZ65H88ge7RCm"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" show="false" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" value="ISO-8859-15"/>
    <elementParameter field="CHECK" name="USE_SHARED_CONNECTION" value="false"/>
    <elementParameter field="TEXT" name="SHARED_CONNECTION_NAME" show="false" value=""/>
    <elementParameter field="TEXT" name="PROPERTIES" value="&quot;&quot;"/>
    <elementParameter field="CLOSED_LIST" name="DB_DRIVER" value="POSTGRESQL"/>
    <elementParameter field="CHECK" name="AUTO_COMMIT" value="false"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
  </node>
  <node componentName="tGreenplumInput" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="192" posY="96">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tGreenplumInput_1"/>
    <elementParameter field="CHECK" name="USE_EXISTING_CONNECTION" value="true"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" value="tGreenplumConnection_1"/>
    <elementParameter field="TEXT" name="HOST" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="TYPE" show="false" value="PostgreSQL"/>
    <elementParameter field="TEXT" name="PORT" show="false" value="&quot;5432&quot;"/>
    <elementParameter field="TEXT" name="DBNAME" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="SCHEMA_DB" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="USER" show="false" value="&quot;&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" show="false" value="0RMsyjmybrE="/>
    <elementParameter field="DBTABLE" name="TABLE" value="&quot;&quot;"/>
    <elementParameter field="QUERYSTORE_TYPE" name="QUERYSTORE" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:REPOSITORY_QUERYSTORE_TYPE" show="false" value=""/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:QUERYSTORE_TYPE" value="BUILT_IN"/>
    <elementParameter field="GUESS_SCHEMA" name="GUESS_SCHEMA" value="&quot;&quot;"/>
    <elementParameter field="MEMO_SQL" name="QUERY" value="&quot;select distinct&#13;&#10; C.JOB_NUMBER as project_number,&#13;&#10;--C.ZTERM AS PAYMNET_TERMS,&#13;&#10;--C.JOB_STATUS AS JOB_STATUS,&#13;&#10;--C.STATUS,&#13;&#10;--C.VTWEG AS DISTRIBUTION_CHANNEL,&#13;&#10; --C.WBS_DESC,&#13;&#10; --C.WBS_TYPE,&#13;&#10;case &#13;&#10; when ((substring(C.ing_quarter,1,4)) &lt; EXTRACT(YEAR FROM CURRENT_DATE) &#13;&#10; or (substring(C.ing_quarter,1,4)) = EXTRACT(YEAR FROM CURRENT_DATE) and  extract(quarter from(C.ing_quarter)) &lt; EXTRACT(QUARTER FROM CURRENT_DATE))&#13;&#10; then (substring(C.ing_quarter,1,4))::int+10||'-Q'||extract (quarter from (C.ing_quarter))&#13;&#10; when ((substring(C.ing_quarter,1,4)) = EXTRACT(YEAR FROM CURRENT_DATE) and  extract (quarter from (C.ing_quarter)) &gt;= EXTRACT(QUARTER FROM CURRENT_DATE) &#13;&#10; or (substring(C.ing_quarter,1,4)) &gt; EXTRACT(YEAR FROM CURRENT_DATE)) &#13;&#10;then (substring(C.ing_quarter,1,4))||'-Q'||extract (quarter from (C.ing_quarter)) end as ing_quarter,&#13;&#10;C.NETWR as ing_backlog_amount,&#13;&#10;-- C.PLANT,&#13;&#10;-- case&#13;&#10;-- when  C.PLANT &lt;&gt; '7000' THEN&#13;&#10; SUM(C.EST_COST) as ing_cost,&#13;&#10; --C.COUNTRY,&#13;&#10;cast ('Repairs' as text) as Source&#13;&#10;-- ELSE&#13;&#10;-- SUM(C.EST_COST)*0.765 &#13;&#10;-- end as EST_COST,&#13;&#10; --C.ing_quarter&#13;&#10;from &#13;&#10;((SELECT distinct&#13;&#10;&#9;  B.JOB_NUMBER AS JOB_NUMBER,&#13;&#10;      B.NETWR   AS NETWR,&#13;&#10;      B.ZTERM AS ZTERM,&#13;&#10;      B.tj02t_JOB_STATUS AS JOB_STATUS,&#13;&#10;      B.STATUS,&#13;&#10;      B.VTWEG,&#13;&#10;      B.WBS_DESC,&#13;&#10;      B.WBS_TYPE,&#13;&#10;    --  B.PLANT as PLANT,&#13;&#10;      B.COUNTRY,&#13;&#10;      SUM(B.EST_LABOR_PACING + B.EST_OVERHEAD_PACING) AS EST_COST,&#13;&#10;      B.ing_quarter as ing_quarter&#13;&#10;   FROM &#13;&#10;(select distinct&#13;&#10;&#9;  A.JOB_NUMBER AS JOB_NUMBER,&#13;&#10;      A.NETWR    AS NETWR,&#13;&#10;      LKP37.PAYMENT_TERMS as ZTERM,&#13;&#10;      LKP27.JOB_STATUS AS tj02t_JOB_STATUS,&#13;&#10;      LKP33.JOB_STATUS  AS STATUS,&#13;&#10;      A.VTWEG,&#13;&#10;      A.WBS_DESC,&#13;&#10;      A.WBS_TYPE,&#13;&#10;    --  A.PLANT as PLANT,&#13;&#10;      T5.PLANNED_DELIVERY_DATE as ing_quarter,&#13;&#10;      LKP1.COUNTRY,&#13;&#10;&#9;  SUM (&#13;&#10;      CASE&#13;&#10;        WHEN COSS.WRTTP             = '01'&#13;&#10;          AND CE.GRID_COST_CATEGORY = 'Labor'&#13;&#10;          AND JEST.OBJNR           IS NULL&#13;&#10;        THEN (COALESCE (WKG001, 0) + COALESCE (WKG002, 0) + COALESCE (WKG003, 0) + COALESCE (WKG004, 0) + COALESCE (WKG005, 0) + COALESCE (WKG006 , 0&#13;&#10;          )                        + COALESCE (WKG007, 0) + COALESCE (WKG008, 0) + COALESCE (WKG009, 0) + COALESCE (WKG010, 0) + COALESCE (WKG011 , 0&#13;&#10;          )                        + COALESCE (WKG012, 0) + COALESCE (WKG013, 0) + COALESCE (WKG014, 0) + COALESCE (WKG015, 0) + COALESCE (WKG016 , 0&#13;&#10;          ))&#13;&#10;        ELSE 0&#13;&#10;      END) AS EST_LABOR_PACING,&#13;&#10;   SUM (&#13;&#10;      CASE&#13;&#10;        WHEN COSS.WRTTP             = '01'&#13;&#10;          AND CE.GRID_COST_CATEGORY = 'Over Head'&#13;&#10;          AND JEST.OBJNR           IS NULL&#13;&#10;        THEN (COALESCE (WKG001, 0) + COALESCE (WKG002, 0) + COALESCE (WKG003, 0) + COALESCE (WKG004, 0) + COALESCE (WKG005, 0) + COALESCE (WKG006 , 0&#13;&#10;          )                        + COALESCE (WKG007, 0) + COALESCE (WKG008, 0) + COALESCE (WKG009, 0) + COALESCE (WKG010, 0) + COALESCE (WKG011 , 0&#13;&#10;          )                        + COALESCE (WKG012, 0) + COALESCE (WKG013, 0) + COALESCE (WKG014, 0) + COALESCE (WKG015, 0) + COALESCE (WKG016 , 0&#13;&#10;          ))&#13;&#10;        ELSE 0&#13;&#10;      END) AS EST_OVERHEAD_PACING&#13;&#10;      FROM&#13;&#10;      PGSGRID.GRIDM_SAP_COST_ELEMENTS CE&#13;&#10;    INNER JOIN ing_repairs_r3p36data.coss COSS&#13;&#10;    ON&#13;&#10;      COSS.KSTAR = CE.KSTAR&#13;&#10;    INNER JOIN (SELECT&#13;&#10;      A.JOB_NUMBER AS JOB_NUMBER ,&#13;&#10;      A.OBJNR      AS OBJNR ,&#13;&#10;      A.AUFNR      AS AUFNR ,&#13;&#10;      A.FAKKZ,&#13;&#10;      A.NETWR,&#13;&#10;      A.vtweg AS VTWEG,&#13;&#10;     -- A.PLANT,&#13;&#10;      A.WBS_DESC   AS WBS_DESC ,&#13;&#10;      A.ZSERIAL    AS ZSERIAL ,&#13;&#10;      A.POSNR      AS POSNR ,&#13;&#10;      A.NETWORK    AS NETWORK ,&#13;&#10;      A.WBS_TYPE   AS WBS_TYPE ,&#13;&#10;      A.START_DATE AS START_DATE ,&#13;&#10;      A.END_DATE   AS END_DATE&#13;&#10;    FROM&#13;&#10;      (SELECT DISTINCT&#13;&#10;          VBAP.VBELN   AS JOB_NUMBER ,&#13;&#10;          AFVC.OBJNR   AS OBJNR ,&#13;&#10;          PRPS2.POSID  AS AUFNR ,&#13;&#10;          PRPS2.POST1  AS WBS_DESC ,&#13;&#10;          VBAP.ZSERIAL AS ZSERIAL ,&#13;&#10;          VBAP.POSNR   AS POSNR ,&#13;&#10;          CAUFV.AUFNR  AS NETWORK ,&#13;&#10;          PRPS2.PRART  AS WBS_TYPE ,&#13;&#10;          --cast(CAUFV.GSTRP as date) AS START_DATE ,&#13;&#10;         -- cast(CAUFV.GLTRP as date) AS END_DATE,&#13;&#10;          to_date(CAUFV.GSTRP,'YYYYMMDD') AS START_DATE ,&#13;&#10;         TO_DATE(CAUFV.GLTRP,'YYYYMMDD')  AS END_DATE,&#13;&#10;          PRPS2.FAKKZ  AS FAKKZ,&#13;&#10;          VBAK.NETWR   AS  NETWR,&#13;&#10;           vbak.vtweg AS vtweg--,&#13;&#10;          -- VBAP.werks AS PLANT&#13;&#10;        FROM&#13;&#10;           ing_repairs_r3p36data.vbap VBAP ,&#13;&#10;           ing_repairs_r3p36data.prps PRPS1 ,&#13;&#10;           ing_repairs_r3p36data.prps PRPS2 ,&#13;&#10;            ing_repairs_r3p36data.caufv CAUFV ,&#13;&#10;             ing_repairs_r3p36data.afvc AFVC ,&#13;&#10;              ing_repairs_r3p36data.vbak VBAK&#13;&#10;        WHERE&#13;&#10;          VBAK.VBTYP = 'C'&#13;&#10;          AND (VBAP.PSTYV LIKE 'ZTP%'&#13;&#10;          OR VBAP.PSTYV       = 'ZJVS')&#13;&#10;          AND VBAP.PS_PSP_PNR = PRPS1.PSPNR&#13;&#10;          AND PRPS1.PSPHI     = PRPS2.PSPHI&#13;&#10;          AND PRPS2.PSPNR     = CAUFV.PSPEL&#13;&#10;          AND CAUFV.AUFPL     = AFVC.AUFPL&#13;&#10;          AND VBAP.VBELN      = VBAK.VBELN&#13;&#10;      UNION ALL&#13;&#10;      SELECT DISTINCT&#13;&#10;          VBAP.VBELN   AS JOB_NUMBER ,&#13;&#10;          AFVC.OBJNR   AS OBJNR ,&#13;&#10;          CAUFV.AUFNR  AS AUFNR ,&#13;&#10;          'N/A'        AS WBS_DESC ,&#13;&#10;          VBAP.ZSERIAL AS ZSERIAL ,&#13;&#10;          VBAP.POSNR   AS POSNR ,&#13;&#10;          CAUFV.AUFNR  AS NETWORK ,&#13;&#10;          'N/A'        AS WBS_TYPE ,&#13;&#10;          to_date(CAUFV.GSTRP,'YYYYMMDD') AS START_DATE ,&#13;&#10;         TO_DATE(CAUFV.GLTRP,'YYYYMMDD')  AS END_DATE,&#13;&#10;          ''           AS FAKKZ,&#13;&#10;           VBAK.NETWR   AS  NETWR,&#13;&#10;            vbak.vtweg AS vtweg--,&#13;&#10;          --  VBAP.werks AS PLANT&#13;&#10;        FROM&#13;&#10;           ing_repairs_r3p36data.vbap VBAP ,&#13;&#10;          --GRIDM_SAP_PRPS_STG PRPS1,&#13;&#10;          --GRIDM_SAP_PRPS_STG PRPS2,&#13;&#10;            ing_repairs_r3p36data.caufv CAUFV ,&#13;&#10;             ing_repairs_r3p36data.afvc AFVC ,&#13;&#10;              ing_repairs_r3p36data.vbak VBAK ,&#13;&#10;          ing_repairs_r3p36data.vbepto_date ('01/01/1900', 'MM/DD/YYYY') AS START_DATE ,&#13;&#10;          to_date ('01/01/1900', 'MM/DD/YYYY') AS END_DATE,&#13;&#10;          PRPS2.FAKKZ                          AS FAKKZ,&#13;&#10;          VBAK.NETWR   AS  NETWR,&#13;&#10;           vbak.vtweg AS vtweg--,&#13;&#10;        --  VBAP.werks AS PLANT&#13;&#10;        FROM&#13;&#10;           ing_repairs_r3p36data.vbap VBAP ,&#13;&#10;           ing_repairs_r3p36data.prps PRPS1 ,&#13;&#10;           ing_repairs_r3p36data.prps PRPS2 ,&#13;&#10;           ing_repairs_r3p36data.vbak VBAK&#13;&#10;        WHERE&#13;&#10;          VBAK.VBTYP       = 'C'&#13;&#10;          AND PRPS2.STUFE IN (2, 3)&#13;&#10;          --AND SUBSTR(PRPS2.POSID,18,2) = '01'&#13;&#10;          AND (VBAP.PSTYV LIKE 'ZTP%'&#13;&#10;          OR VBAP.PSTYV       = 'ZJVS')&#13;&#10;          AND VBAP.PS_PSP_PNR = PRPS1.PSPNR&#13;&#10;          AND PRPS1.PSPHI     = PRPS2.PSPHI&#13;&#10;          AND VBAP.VBELN      = VBAK.VBELN&#13;&#10;      ) A&#13;&#10;    WHERE (JOB_NUMBER, POSNR) NOT IN (('0000000430', '30'), ('0000000483', '30'), ('0000000796', '30'), ('0000001129', '30'), ('0000002208', '30' ),&#13;&#10;      ('0000002208', '30'), ('0000002208', '40'), ('0000002208', '40'), ('0000002225', '100'), ('0000002225', '100'), ('0000002225', '100'), (&#13;&#10;      '0000002225', '110'), ('0000002225', '110'), ('0000002225', '110'), ('0000002225', '120'), ('0000002225', '120'), ('0000002225', '120'), (&#13;&#10;      '0000002225', '130'), ('0000002225', '130'), ('0000002225', '130'), ('0000002225', '140'), ('0000002225', '140'), ('0000002225', '140'), (&#13;&#10;      '0000002225', '150'), ('0000002225', '150'), ('0000002225', '150'), ('0000002225', '30'), ('0000002225', '30'), ('0000002225', '30'), (&#13;&#10;      '0000002225', '40'), ('0000002225', '40'), ('0000002225', '40'), ('0000002225', '50'), ('0000002225', '50'), ('0000002225', '50'), (&#13;&#10;      '0000002225', '60'), ('0000002225', '60'), ('0000002225', '60'), ('0000002225', '70'), ('0000002225', '70'), ('0000002225', '70'), (&#13;&#10;      '0000002225', '80'), ('0000002225', '80'), ('0000002225', '80'), ('0000002225', '90'), ('0000002225', '90'), ('0000002225', '90'), (&#13;&#10;      '0000002546', '40'), ('0000002546', '40'), ('0000002552', '30'), ('0000002552', '30'), ('0000002552', '40'), ('0000002552', '40'), (&#13;&#10;      '0000002659', '30'), ('0000002659', '30'), ('0000002659', '40'), ('0000002659', '40'), ('0000002889', '30'), ('0000003005', '30'), (&#13;&#10;      '0000005260', '30'), ('0000006817', '30'), ('0000014862', '40'), ('0000014962', '20'), ('0000016492', '40'), ('0000018988', '20'))&#13;&#10;      --AND WBS_TYPE &lt;&gt; 'RW'&#13;&#10;  ) A&#13;&#10;    ON&#13;&#10;      COSS.OBJNR = A.OBJNR&#13;&#10;    left outer join (SELECT DISTINCT&#13;&#10;      A.VBELN                       AS VBELN ,&#13;&#10;      MIN (A.PLANNED_DELIVERY_DATE) AS PLANNED_DELIVERY_DATE ,&#13;&#10;      A.POSNR                       AS POSNR&#13;&#10;    FROM&#13;&#10;      (SELECT DISTINCT&#13;&#10;          VBAP.VBELN AS VBELN ,&#13;&#10;          VBAP.POSNR AS POSNR ,&#13;&#10;          to_date(PROJ.PLSEZ,'YYYYMMDD') AS PLANNED_DELIVERY_DATE&#13;&#10;        FROM&#13;&#10;           ing_repairs_r3p36data.vbap VBAP,&#13;&#10;          ing_repairs_r3p36data.prps PRPS ,&#13;&#10;          ing_repairs_r3p36data.proj PROJ&#13;&#10;        WHERE&#13;&#10;          VBAP.PS_PSP_PNR = PRPS.PSPNR&#13;&#10;          AND PRPS.PSPHI  = PROJ.PSPNR&#13;&#10;      UNION&#13;&#10;      SELECT&#13;&#10;          VBAP.VBELN AS VBELN ,&#13;&#10;          VBAP.POSNR AS POSNR ,&#13;&#10;          to_date(PROJ.PLSEZ,'YYYYMMDD') AS PLANNED_DELIVERY_DATE&#13;&#10;        FROM&#13;&#10;            ing_repairs_r3p36data.caufv CAUFV ,&#13;&#10;          ing_repairs_r3p36data.prps PRPS1 ,&#13;&#10;          ing_repairs_r3p36data.proj PROJ ,&#13;&#10;           ing_repairs_r3p36data.vbap VBAP&#13;&#10;        WHERE&#13;&#10;          CAUFV.KDAUF     = VBAP.VBELN&#13;&#10;          AND PRPS1.PSPNR = CAUFV.PSPEL&#13;&#10;          AND PROJ.PSPNR  = PRPS1.PSPHI&#13;&#10;          AND CAUFV.KDPOS = VBAP.POSNR&#13;&#10;      UNION&#13;&#10;      SELECT&#13;&#10;          VBAK.VBELN  AS VBELN ,&#13;&#10;          CAUFV.KDPOS AS POSNR ,&#13;&#10;          to_date(CAUFV.GLTRP,'YYYYMMDD') AS PLANNED_DELIVERY_DATE&#13;&#10;        FROM&#13;&#10;            ing_repairs_r3p36data.caufv CAUFV ,&#13;&#10;          ing_repairs_r3p36data.vbak VBAK&#13;&#10;        WHERE&#13;&#10;          VBAK.VBELN      = CAUFV.KDAUF&#13;&#10;          AND CAUFV.AUTYP = 30&#13;&#10;      ) A&#13;&#10;    GROUP BY&#13;&#10;      VBELN,&#13;&#10;      POSNR&#13;&#10;    ORDER BY&#13;&#10;      VBELN ASC,&#13;&#10;      PLANNED_DELIVERY_DATE DESC&#13;&#10;)   T5 on A.posnr = T5.posnr and T5.vbeln = A.job_number&#13;&#10;    LEFT OUTER JOIN  (SELECT&#13;&#10;      CALENDAR_DATE ,&#13;&#10;      FISCAL_WEEK_NUMBER ,&#13;&#10;      FISCAL_QUARTER_NUMBER ,&#13;&#10;      FISCAL_YEAR_NUMBER&#13;&#10;    FROM&#13;&#10;      PGSGRID.CALENDAR_D&#13;&#10;  ) D ON (T5.PLANNED_DELIVERY_DATE) = D.CALENDAR_DATE&#13;&#10;    LEFT OUTER JOIN (SELECT&#13;&#10;      *&#13;&#10;    FROM&#13;&#10;      (SELECT&#13;&#10;          * ,&#13;&#10;          row_number () over (PARTITION BY VBELN ORDER BY VBELN, POSNR DESC) AS row_num&#13;&#10;        FROM&#13;&#10;          (SELECT DISTINCT&#13;&#10;              VBAP.VBELN AS VBELN ,&#13;&#10;              VBPA.POSNR AS POSNR ,&#13;&#10;              KNA1.KUNNR AS CUSTOMER_NUM ,&#13;&#10;              KNA1.NAME1 AS SHIP_TO_CUSTOMER_BY_LINE_ITEM ,&#13;&#10;              KNA1.STRAS&#13;&#10;              || ' / '&#13;&#10;              || KNA1.ORT01&#13;&#10;              || ' / '&#13;&#10;              || KNA1.REGIO&#13;&#10;              || ' / '&#13;&#10;              || KNA1.PSTLZ&#13;&#10;              || ' / '&#13;&#10;              || KNA1.LAND1 AS SHIP_TO_ADDRESS ,&#13;&#10;              KNA1.STRAS    AS STREET ,&#13;&#10;              KNA1.ORT01    AS CITY ,&#13;&#10;              KNA1.REGIO    AS STATE ,&#13;&#10;              KNA1.PSTLZ    AS ZIP ,&#13;&#10;              KNA1.LAND1    AS COUNTRY ,&#13;&#10;              VBAK.ZSARAME  AS ZSARAME&#13;&#10;            FROM&#13;&#10;               ing_repairs_r3p36data.vbap VBAP ,&#13;&#10;               ing_repairs_r3p36data.vbak VBAK ,&#13;&#10;              ing_repairs_r3p36data.vbpa VBPA ,&#13;&#10;               ing_repairs_r3p36data.kna1 KNA1&#13;&#10;            WHERE&#13;&#10;              VBPA.PARVW      = 'WE'&#13;&#10;              AND VBPA.POSNR::int IN (0, 20)&#13;&#10;              AND VBAP.VBELN  = VBAK.VBELN&#13;&#10;              AND VBPA.VBELN  = VBAP.VBELN&#13;&#10;              AND VBPA.KUNNR  = KNA1.KUNNR&#13;&#10;          ) A&#13;&#10;      ) B&#13;&#10;    WHERE&#13;&#10;      row_num = 1&#13;&#10;  ) LKP1&#13;&#10;    ON&#13;&#10;      A.JOB_NUMBER = LKP1.VBELN&#13;&#10;    LEFT OUTER JOIN&#13;&#10;      (SELECT DISTINCT&#13;&#10;          OBJNR&#13;&#10;        FROM&#13;&#10;          ing_repairs_r3p36data.jest JEST&#13;&#10;        WHERE&#13;&#10;          JEST.STAT        = 'I0076'&#13;&#10;          AND (JEST.INACT IS NULL&#13;&#10;          OR JEST.INACT    = '')&#13;&#10;      ) JEST&#13;&#10;    ON&#13;&#10;      COSS.OBJNR = JEST.OBJNR&#13;&#10;      LEFT OUTER JOIN ( SELECT DISTINCT&#13;&#10;      VBAP.VBELN        AS VBELN ,&#13;&#10;      VBAP.POSNR        AS POSNR ,&#13;&#10;      USER_STATUS.TXT30 AS JOB_STATUS&#13;&#10;    FROM&#13;&#10;      ing_repairs_r3p36data.PRPS PRPS1,&#13;&#10;      ing_repairs_r3p36data.PRPS PRPS2,&#13;&#10;      ing_repairs_r3p36data.CAUFV CAUFV,&#13;&#10;      ing_repairs_r3p36data.AFVC AFVC,&#13;&#10;      ing_repairs_r3p36data.JEST IND_OBJECT_STATUS,&#13;&#10;      ing_repairs_r3p36data.TJ02T USER_STATUS,&#13;&#10;      ing_repairs_r3p36data.VBAP VBAP,&#13;&#10;      (SELECT&#13;&#10;          VBAP.VBELN                                                      AS VBELN ,&#13;&#10;          VBAP.POSNR                                                      AS POSNR ,&#13;&#10;          MAX (SUBSTR (USER_STATUS.ISTAT, 2, LENGTH (USER_STATUS.ISTAT))) AS MAX_ISTAT&#13;&#10;        FROM&#13;&#10;          ing_repairs_r3p36data.PRPS PRPS1 ,&#13;&#10;          ing_repairs_r3p36data.PRPS PRPS2 ,&#13;&#10;          ing_repairs_r3p36data.CAUFV CAUFV ,&#13;&#10;          ing_repairs_r3p36data.AFVC AFVC ,&#13;&#10;          ing_repairs_r3p36data.JEST IND_OBJECT_STATUS ,&#13;&#10;          ing_repairs_r3p36data.TJ02T USER_STATUS ,&#13;&#10;          ing_repairs_r3p36datachar_length (USER_STATUS.ISTAT)) = A.MAX_ISTAT&#13;&#10;      AND VBAP.VBELN                                                     = A.VBELN&#13;&#10;      AND VBAP.POSNR                                                     = A.POSNR&#13;&#10;  ) LKP27&#13;&#10;    ON&#13;&#10;      A.JOB_NUMBER           = LKP27.VBELN&#13;&#10;      AND A.posnr = LKP27.POSNR /*posnr as LINE ITEM NUMBER    ----------------    vbap.posnr AS line_item_number */&#13;&#10;       LEFT OUTER JOIN (SELECT&#13;&#10;      Z.VBELN      AS VBELN ,&#13;&#10;      Z.POSNR      AS POSNR ,&#13;&#10;      Z.JOB_STATUS AS JOB_STATUS&#13;&#10;    FROM&#13;&#10;      (SELECT&#13;&#10;          VBELN ,&#13;&#10;          POSNR ,&#13;&#10;          REPLACE (rtrim (txt1&#13;&#10;          || ' '&#13;&#10;          || txt2&#13;&#10;          || ' '&#13;&#10;          || txt3&#13;&#10;          || ' '&#13;&#10;          || txt4&#13;&#10;          || ' '&#13;&#10;          || txt5&#13;&#10;          || ' '&#13;&#10;          || txt6&#13;&#10;          || ' '&#13;&#10;          || txt7&#13;&#10;          || ' '&#13;&#10;          || txt8&#13;&#10;          || ' '&#13;&#10;          || txt9&#13;&#10;          || ' '&#13;&#10;          || txt10), ' ', ',') AS JOB_STATUS&#13;&#10;        FROM&#13;&#10;          (SELECT&#13;&#10;              VBELN ,&#13;&#10;              POSNR ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 1&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt1 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 2&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt2 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 3&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt3 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 4&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt4 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 5&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt5 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 6&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt6 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 7&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt7 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 8&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt8 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 9&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt9 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 10&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt10&#13;&#10;            FROM&#13;&#10;              (SELECT&#13;&#10;                  BC.VBELN ,&#13;&#10;                  BC.POSNR ,&#13;&#10;                  BC.TXT04 ,&#13;&#10;                  row_number () over (PARTITION BY BC.VBELN, BC.POSNR ORDER BY BC.VBELN, BC.POSNR, BC.TXT04) AS row_num&#13;&#10;                FROM&#13;&#10;                  (SELECT DISTINCT&#13;&#10;                      VBAP.VBELN AS VBELN ,&#13;&#10;                      VBAP.POSNR AS POSNR ,&#13;&#10;                      TJ02T.TXT04&#13;&#10;                    FROM&#13;&#10;                      ing_repairs_r3p36data.JEST JEST ,&#13;&#10;                      ing_repairs_r3p36data.VBAP VBAP ,&#13;&#10;                      ing_repairs_r3p36data.CAUFV CAUFV ,&#13;&#10;                      ing_repairs_r3p36data.VBAK VBAK ,&#13;&#10;                      ing_repairs_r3p36data.TJ02T TJ02T&#13;&#10;                    WHERE&#13;&#10;                      CAUFV.AUTYP                     = 30&#13;&#10;                      AND TJ02T.SPRAS                 = 'E'&#13;&#10;                      AND COALESCE (JEST.INACT, ' ') &lt;&gt; 'X'&#13;&#10;                      AND VBAK.AUART                 IN ('ZRAS', 'ZWRL')&#13;&#10;                      AND VBAP.VBELN                  = CAUFV.KDAUF&#13;&#10;                      AND VBAP.POSNR                  = CAUFV.KDPOS&#13;&#10;                      AND VBAP.VBELN                  = VBAK.VBELN&#13;&#10;                      AND JEST.OBJNR                  = CAUFV.OBJNR&#13;&#10;                      AND JEST.STAT                   = TJ02T.ISTAT&#13;&#10;                    ORDER BY&#13;&#10;                      VBAP.VBELN,&#13;&#10;                      VBAP.POSNR&#13;&#10;                  ) BC&#13;&#10;              ) r&#13;&#10;            GROUP BY&#13;&#10;              VBELN,&#13;&#10;              POSNR&#13;&#10;          ) A&#13;&#10;      --&#13;&#10;      UNION ALL&#13;&#10;      SELECT&#13;&#10;          VBELN ,&#13;&#10;          POSNR ,&#13;&#10;          REPLACE (rtrim (txt1&#13;&#10;          || ' '&#13;&#10;          || txt2&#13;&#10;          || ' '&#13;&#10;          || txt3&#13;&#10;          || ' '&#13;&#10;          || txT5&#13;&#10;          || ' '&#13;&#10;          || txt5&#13;&#10;          || ' '&#13;&#10;          || txt6&#13;&#10;          || ' '&#13;&#10;          || txt7&#13;&#10;          || ' '&#13;&#10;          || txt8&#13;&#10;          || ' '&#13;&#10;          || txt9&#13;&#10;          || ' '&#13;&#10;          || txt10), ' ', ',') AS JOB_STATUS&#13;&#10;        FROM&#13;&#10;          (SELECT&#13;&#10;              VBELN ,&#13;&#10;              POSNR ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 1&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt1 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 2&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt2 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 3&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt3 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 4&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt4 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 5&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt5 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 6&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt6 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 7&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt7 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 8&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt8 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 9&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt9 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 10&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt10&#13;&#10;            FROM&#13;&#10;              (SELECT&#13;&#10;                  BC.VBELN ,&#13;&#10;                  BC.POSNR ,&#13;&#10;                  BC.TXT04 ,&#13;&#10;                  row_number () over (PARTITION BY BC.VBELN, BC.POSNR ORDER BY BC.VBELN, BC.POSNR, BC.TXT04) AS row_num&#13;&#10;                FROM&#13;&#10;                  (SELECT DISTINCT&#13;&#10;                      VBAP.VBELN AS VBELN ,&#13;&#10;                      VBAP.POSNR AS POSNR ,&#13;&#10;                      TJ02T.TXT04&#13;&#10;                    FROM&#13;&#10;                      ing_repairs_r3p36data.JEST JEST ,&#13;&#10;                      ing_repairs_r3p36data.VBAP VBAP ,&#13;&#10;                      ing_repairs_r3p36data.CAUFV CAUFV ,&#13;&#10;                      ing_repairs_r3p36data.PRPS PRPS1 ,&#13;&#10;                      ing_repairs_r3p36data.PROJ PROJ ,&#13;&#10;                      ing_repairs_r3p36data.TJ02T TJ02T&#13;&#10;                    WHERE&#13;&#10;                      TJ02T.SPRAS                     = 'E'&#13;&#10;                      AND COALESCE (JEST.INACT, ' ') &lt;&gt; 'X'&#13;&#10;                      AND PRPS1.PSPHI                 = PROJ.PSPNR&#13;&#10;                      AND CAUFV.PSPEL                 = PRPS1.PSPNR&#13;&#10;                      AND VBAP.VBELN                  = CAUFV.KDAUF&#13;&#10;                      AND JEST.OBJNR                  = PROJ.OBJNR&#13;&#10;                      AND JEST.STAT                   = TJ02T.ISTAT&#13;&#10;                    ORDER BY&#13;&#10;                      VBAP.VBELN,&#13;&#10;                      VBAP.POSNR&#13;&#10;                  ) BC&#13;&#10;              ) r&#13;&#10;            GROUP BY&#13;&#10;              VBELN,&#13;&#10;              POSNR&#13;&#10;          ) X&#13;&#10;      ) Z&#13;&#10;  ) LKP33&#13;&#10;    ON&#13;&#10;      A.JOB_NUMBER           = LKP33.VBELN&#13;&#10;      AND A.posnr = LKP33.POSNR /*posnr as LINE ITEM NUMBER    ----------------    vbap.posnr AS line_item_number */&#13;&#10;    LEFT OUTER JOIN ( SELECT DISTINCT&#13;&#10;      VBAP.VBELN   AS VBELN ,&#13;&#10;      VBAP.POSNR   AS POSNR ,&#13;&#10;      VBKD.inco1   AS INCO_TERMS ,&#13;&#10;      VBKD.ZTERM   AS PAYMENT_TERMS ,&#13;&#10;      VBKD.BSTKD_E AS CUSTOMER_PO_BY_LINE_ITEM_NUM&#13;&#10;    FROM&#13;&#10;      ing_repairs_r3p36data.VBKD VBKD,&#13;&#10;      ing_repairs_r3p36data.VBAP VBAP&#13;&#10;    WHERE&#13;&#10;      VBAP.VBELN     = VBKD.VBELN&#13;&#10;      AND VBAP.POSNR = VBKD.POSNR&#13;&#10;  )     LKP37 /**/&#13;&#10;    ON&#13;&#10;      A.JOB_NUMBER           = LKP37.VBELN&#13;&#10;      AND A.posnr = LKP37.POSNR /*posnr as LINE ITEM NUMBER    ----------------    vbap.posnr AS line_item_number */&#13;&#10;    --left outer join cx_gridm_orders_agg_final_s1_new_vw_LKP29 LKP29 on A.plant = LKP29.WERKS&#13;&#10;    WHERE&#13;&#10;        COSS.KSTAR          = CE.KSTAR&#13;&#10;      AND COSS.VRGNG NOT IN ('KOAO', 'KOAL', 'KOAQ', 'KOAR') AND upper (coalesce(A.WBS_DESC,'NA')) NOT LIKE '%REWORK%' AND coalesce(A.WBS_TYPE, ' ') NOT LIKE '%RW%'&#13;&#10;GROUP BY&#13;&#10;&#9;  A.JOB_NUMBER,&#13;&#10;      A.NETWR,&#13;&#10;      LKP37.PAYMENT_TERMS,&#13;&#10;      LKP27.JOB_STATUS,&#13;&#10;      LKP33.JOB_STATUS,&#13;&#10;      A.VTWEG,&#13;&#10;      A.WBS_DESC,&#13;&#10;      A.WBS_TYPE,&#13;&#10;     -- A.PLANT,&#13;&#10;     LKP1.COUNTRY,&#13;&#10;      ing_quarter&#13;&#10;)B &#13;&#10;--where B.JOB_NUMBER like '%80822%' or B.JOB_NUMBER like '%78604%' or&#13;&#10;--B.JOB_NUMBER like '%79651%' or&#13;&#10;--B.JOB_NUMBER like '%80123%' or&#13;&#10;--B.JOB_NUMBER like '%80124%' or&#13;&#10;--B.JOB_NUMBER like '%81243%' or&#13;&#10;--B.JOB_NUMBER like '%81245%' or&#13;&#10;--B.JOB_NUMBER like '%81247%' or&#13;&#10;--B.JOB_NUMBER like '%81248%' or&#13;&#10;--B.JOB_NUMBER like '%81525%' or&#13;&#10;--B.JOB_NUMBER like '%53006%' or&#13;&#10;--B.JOB_NUMBER like '%53008%'&#13;&#10;GROUP BY &#13;&#10;B.JOB_NUMBER, &#13;&#10;B.NETWR,&#13;&#10;B.ZTERM,&#13;&#10;B.tj02t_JOB_STATUS,&#13;&#10;B.STATUS,&#13;&#10;B.VTWEG,&#13;&#10;B.WBS_DESC,&#13;&#10;B.WBS_TYPE,&#13;&#10;B.COUNTRY,&#13;&#10;--B.PLANT,&#13;&#10;B.ing_quarter&#13;&#10;)&#13;&#10;union&#13;&#10;(SELECT distinct&#13;&#10;&#9;  B.JOB_NUMBER AS JOB_NUMBER,&#13;&#10;      B.NETWR    AS NETWR,&#13;&#10;      B.ZTERM,&#13;&#10;      B.tj02t_JOB_STATUS,&#13;&#10;      B.STATUS,&#13;&#10;      B.VTWEG,&#13;&#10;      B.WBS_DESC,&#13;&#10;      B.WBS_TYPE,&#13;&#10;      B.COUNTRY,&#13;&#10;     -- B.PLANT,&#13;&#10;      SUM(B.EST_MATERIAL_PACING + B.EST_DIRECT_EXPENSES_PACING) AS EST_COST,&#13;&#10;      B.ing_quarter as ing_quarter&#13;&#10;   FROM &#13;&#10;(select distinct&#13;&#10;&#9;  A.JOB_NUMBER AS JOB_NUMBER,&#13;&#10;      A.NETWR    AS NETWR,&#13;&#10;     LKP37.PAYMENT_TERMS as ZTERM,&#13;&#10;     LKP27.JOB_STATUS AS tj02t_JOB_STATUS,&#13;&#10;     LKP33.JOB_STATUS  AS STATUS,&#13;&#10;     A.VTWEG,&#13;&#10;     A.WBS_DESC,&#13;&#10;     A.WBS_TYPE,&#13;&#10;    --  A.PLANT,&#13;&#10;    LKP1.COUNTRY,&#13;&#10;     T5.PLANNED_DELIVERY_DATE as ing_quarter,&#13;&#10;&#9; SUM ((&#13;&#10;      CASE&#13;&#10;        WHEN COSP.WRTTP            = '01'&#13;&#10;          AND CE.GRID_COST_CATEGORY = 'Material'&#13;&#10;          AND JEST.OBJNR           IS NULL&#13;&#10;        THEN (COALESCE (WKG001, 0) + COALESCE (WKG002, 0) + COALESCE (WKG003, 0) + COALESCE (WKG004, 0) + COALESCE (WKG005, 0) + COALESCE (WKG006 , 0&#13;&#10;          )                        + COALESCE (WKG007, 0) + COALESCE (WKG008, 0) + COALESCE (WKG009, 0) + COALESCE (WKG010, 0) + COALESCE (WKG011 , 0&#13;&#10;          )                        + COALESCE (WKG012, 0) + COALESCE (WKG013, 0) + COALESCE (WKG014, 0) + COALESCE (WKG015, 0) + COALESCE (WKG016 , 0&#13;&#10;          ))&#13;&#10;        ELSE 0&#13;&#10;      END)) AS EST_MATERIAL_PACING,&#13;&#10;      SUM ((&#13;&#10;      CASE&#13;&#10;        WHEN COSP.WRTTP            = '01'&#13;&#10;          AND CE.GRID_COST_CATEGORY = 'Direct Expenses'&#13;&#10;          AND JEST.OBJNR           IS NULL&#13;&#10;        THEN (COALESCE (WKG001, 0) + COALESCE (WKG002, 0) + COALESCE (WKG003, 0) + COALESCE (WKG004, 0) + COALESCE (WKG005, 0) + COALESCE (WKG006 , 0&#13;&#10;          )                        + COALESCE (WKG007, 0) + COALESCE (WKG008, 0) + COALESCE (WKG009, 0) + COALESCE (WKG010, 0) + COALESCE (WKG011 , 0&#13;&#10;          )                        + COALESCE (WKG012, 0) + COALESCE (WKG013, 0) + COALESCE (WKG014, 0) + COALESCE (WKG015, 0) + COALESCE (WKG016 , 0&#13;&#10;          ))&#13;&#10;        ELSE 0&#13;&#10;      END)) AS EST_DIRECT_EXPENSES_PACING&#13;&#10;    FROM&#13;&#10;      PGSGRID.GRIDM_SAP_COST_ELEMENTS CE&#13;&#10;    INNER JOIN ing_repairs_r3p36data.cosp COSP&#13;&#10;    ON&#13;&#10;      COSP.KSTAR = CE.KSTAR&#13;&#10;    INNER JOIN (SELECT&#13;&#10;      A.JOB_NUMBER AS JOB_NUMBER ,&#13;&#10;      A.OBJNR      AS OBJNR ,&#13;&#10;      A.AUFNR      AS AUFNR ,&#13;&#10;      A.FAKKZ,&#13;&#10;      A.NETWR,&#13;&#10;      A.vtweg AS VTWEG,&#13;&#10;     -- A.PLANT,&#13;&#10;      A.WBS_DESC   AS WBS_DESC ,&#13;&#10;      A.ZSERIAL    AS ZSERIAL ,&#13;&#10;      A.POSNR      AS POSNR ,&#13;&#10;      A.NETWORK    AS NETWORK ,&#13;&#10;      A.WBS_TYPE   AS WBS_TYPE ,&#13;&#10;      A.START_DATE AS START_DATE ,&#13;&#10;      A.END_DATE   AS END_DATE&#13;&#10;    FROM&#13;&#10;      (SELECT DISTINCT&#13;&#10;          VBAP.VBELN   AS JOB_NUMBER ,&#13;&#10;          AFVC.OBJNR   AS OBJNR ,&#13;&#10;          PRPS2.POSID  AS AUFNR ,&#13;&#10;          PRPS2.POST1  AS WBS_DESC ,&#13;&#10;          VBAP.ZSERIAL AS ZSERIAL ,&#13;&#10;          VBAP.POSNR   AS POSNR ,&#13;&#10;          CAUFV.AUFNR  AS NETWORK ,&#13;&#10;          PRPS2.PRART  AS WBS_TYPE ,&#13;&#10;          --cast(CAUFV.GSTRP as date) AS START_DATE ,&#13;&#10;         -- cast(CAUFV.GLTRP as date) AS END_DATE,&#13;&#10;          to_date(CAUFV.GSTRP,'YYYYMMDD') AS START_DATE ,&#13;&#10;         TO_DATE(CAUFV.GLTRP,'YYYYMMDD')  AS END_DATE,&#13;&#10;          PRPS2.FAKKZ  AS FAKKZ,&#13;&#10;          VBAK.NETWR   AS  NETWR,&#13;&#10;           vbak.vtweg AS vtweg--,&#13;&#10;          -- VBAP.werks AS PLANT&#13;&#10;        FROM&#13;&#10;           ing_repairs_r3p36data.vbap VBAP ,&#13;&#10;           ing_repairs_r3p36data.prps PRPS1 ,&#13;&#10;           ing_repairs_r3p36data.prps PRPS2 ,&#13;&#10;            ing_repairs_r3p36data.caufv CAUFV ,&#13;&#10;             ing_repairs_r3p36data.afvc AFVC ,&#13;&#10;              ing_repairs_r3p36data.vbak VBAK&#13;&#10;        WHERE&#13;&#10;          VBAK.VBTYP = 'C'&#13;&#10;          AND (VBAP.PSTYV LIKE 'ZTP%'&#13;&#10;          OR VBAP.PSTYV       = 'ZJVS')&#13;&#10;          AND VBAP.PS_PSP_PNR = PRPS1.PSPNR&#13;&#10;          AND PRPS1.PSPHI     = PRPS2.PSPHI&#13;&#10;          AND PRPS2.PSPNR     = CAUFV.PSPEL&#13;&#10;          AND CAUFV.AUFPL     = AFVC.AUFPL&#13;&#10;          AND VBAP.VBELN      = VBAK.VBELN&#13;&#10;      UNION ALL&#13;&#10;      SELECT DISTINCT&#13;&#10;          VBAP.VBELN   AS JOB_NUMBER ,&#13;&#10;          AFVC.OBJNR   AS OBJNR ,&#13;&#10;          CAUFV.AUFNR  AS AUFNR ,&#13;&#10;          'N/A'        AS WBS_DESC ,&#13;&#10;          VBAP.ZSERIAL AS ZSERIAL ,&#13;&#10;          VBAP.POSNR   AS POSNR ,&#13;&#10;          CAUFV.AUFNR  AS NETWORK ,&#13;&#10;          'N/A'        AS WBS_TYPE ,&#13;&#10;          to_date(CAUFV.GSTRP,'YYYYMMDD') AS START_DATE ,&#13;&#10;         TO_DATE(CAUFV.GLTRP,'YYYYMMDD')  AS END_DATE,&#13;&#10;          ''           AS FAKKZ,&#13;&#10;           VBAK.NETWR   AS  NETWR,&#13;&#10;            vbak.vtweg AS vtweg--,&#13;&#10;          --  VBAP.werks AS PLANT&#13;&#10;        FROM&#13;&#10;           ing_repairs_r3p36data.vbap VBAP ,&#13;&#10;          --GRIDM_SAP_PRPS_STG PRPS1,&#13;&#10;          --GRIDM_SAP_PRPS_STG PRPS2,&#13;&#10;            ing_repairs_r3p36data.caufv CAUFV ,&#13;&#10;             ing_repairs_r3p36data.afvc AFVC ,&#13;&#10;              ing_repairs_r3p36data.vbak VBAK ,&#13;&#10;          ing_repairs_r3p36data.vbepto_date ('01/01/1900', 'MM/DD/YYYY') AS START_DATE ,&#13;&#10;          to_date ('01/01/1900', 'MM/DD/YYYY') AS END_DATE,&#13;&#10;          PRPS2.FAKKZ                          AS FAKKZ,&#13;&#10;          VBAK.NETWR   AS  NETWR,&#13;&#10;           vbak.vtweg AS vtweg--,&#13;&#10;        --  VBAP.werks AS PLANT&#13;&#10;        FROM&#13;&#10;           ing_repairs_r3p36data.vbap VBAP ,&#13;&#10;           ing_repairs_r3p36data.prps PRPS1 ,&#13;&#10;           ing_repairs_r3p36data.prps PRPS2 ,&#13;&#10;           ing_repairs_r3p36data.vbak VBAK&#13;&#10;        WHERE&#13;&#10;          VBAK.VBTYP       = 'C'&#13;&#10;          AND PRPS2.STUFE IN (2, 3)&#13;&#10;          --AND SUBSTR(PRPS2.POSID,18,2) = '01'&#13;&#10;          AND (VBAP.PSTYV LIKE 'ZTP%'&#13;&#10;          OR VBAP.PSTYV       = 'ZJVS')&#13;&#10;          AND VBAP.PS_PSP_PNR = PRPS1.PSPNR&#13;&#10;          AND PRPS1.PSPHI     = PRPS2.PSPHI&#13;&#10;          AND VBAP.VBELN      = VBAK.VBELN&#13;&#10;      ) A&#13;&#10;    WHERE (JOB_NUMBER, POSNR) NOT IN (('0000000430', '30'), ('0000000483', '30'), ('0000000796', '30'), ('0000001129', '30'), ('0000002208', '30' ),&#13;&#10;      ('0000002208', '30'), ('0000002208', '40'), ('0000002208', '40'), ('0000002225', '100'), ('0000002225', '100'), ('0000002225', '100'), (&#13;&#10;      '0000002225', '110'), ('0000002225', '110'), ('0000002225', '110'), ('0000002225', '120'), ('0000002225', '120'), ('0000002225', '120'), (&#13;&#10;      '0000002225', '130'), ('0000002225', '130'), ('0000002225', '130'), ('0000002225', '140'), ('0000002225', '140'), ('0000002225', '140'), (&#13;&#10;      '0000002225', '150'), ('0000002225', '150'), ('0000002225', '150'), ('0000002225', '30'), ('0000002225', '30'), ('0000002225', '30'), (&#13;&#10;      '0000002225', '40'), ('0000002225', '40'), ('0000002225', '40'), ('0000002225', '50'), ('0000002225', '50'), ('0000002225', '50'), (&#13;&#10;      '0000002225', '60'), ('0000002225', '60'), ('0000002225', '60'), ('0000002225', '70'), ('0000002225', '70'), ('0000002225', '70'), (&#13;&#10;      '0000002225', '80'), ('0000002225', '80'), ('0000002225', '80'), ('0000002225', '90'), ('0000002225', '90'), ('0000002225', '90'), (&#13;&#10;      '0000002546', '40'), ('0000002546', '40'), ('0000002552', '30'), ('0000002552', '30'), ('0000002552', '40'), ('0000002552', '40'), (&#13;&#10;      '0000002659', '30'), ('0000002659', '30'), ('0000002659', '40'), ('0000002659', '40'), ('0000002889', '30'), ('0000003005', '30'), (&#13;&#10;      '0000005260', '30'), ('0000006817', '30'), ('0000014862', '40'), ('0000014962', '20'), ('0000016492', '40'), ('0000018988', '20'))&#13;&#10;      --AND WBS_TYPE &lt;&gt; 'RW'&#13;&#10;  )  A on COSP.OBJNR = A.OBJNR&#13;&#10;    left outer join (SELECT DISTINCT&#13;&#10;      A.VBELN                       AS VBELN ,&#13;&#10;      MIN (A.PLANNED_DELIVERY_DATE) AS PLANNED_DELIVERY_DATE ,&#13;&#10;      A.POSNR                       AS POSNR&#13;&#10;    FROM&#13;&#10;      (SELECT DISTINCT&#13;&#10;          VBAP.VBELN AS VBELN ,&#13;&#10;          VBAP.POSNR AS POSNR ,&#13;&#10;          to_date(PROJ.PLSEZ,'YYYYMMDD') AS PLANNED_DELIVERY_DATE&#13;&#10;        FROM&#13;&#10;           ing_repairs_r3p36data.vbap VBAP,&#13;&#10;          ing_repairs_r3p36data.prps PRPS ,&#13;&#10;          ing_repairs_r3p36data.proj PROJ&#13;&#10;        WHERE&#13;&#10;          VBAP.PS_PSP_PNR = PRPS.PSPNR&#13;&#10;          AND PRPS.PSPHI  = PROJ.PSPNR&#13;&#10;      UNION&#13;&#10;      SELECT&#13;&#10;          VBAP.VBELN AS VBELN ,&#13;&#10;          VBAP.POSNR AS POSNR ,&#13;&#10;          to_date(PROJ.PLSEZ,'YYYYMMDD') AS PLANNED_DELIVERY_DATE&#13;&#10;        FROM&#13;&#10;            ing_repairs_r3p36data.caufv CAUFV ,&#13;&#10;          ing_repairs_r3p36data.prps PRPS1 ,&#13;&#10;          ing_repairs_r3p36data.proj PROJ ,&#13;&#10;           ing_repairs_r3p36data.vbap VBAP&#13;&#10;        WHERE&#13;&#10;          CAUFV.KDAUF     = VBAP.VBELN&#13;&#10;          AND PRPS1.PSPNR = CAUFV.PSPEL&#13;&#10;          AND PROJ.PSPNR  = PRPS1.PSPHI&#13;&#10;          AND CAUFV.KDPOS = VBAP.POSNR&#13;&#10;      UNION&#13;&#10;      SELECT&#13;&#10;          VBAK.VBELN  AS VBELN ,&#13;&#10;          CAUFV.KDPOS AS POSNR ,&#13;&#10;          to_date(CAUFV.GLTRP,'YYYYMMDD') AS PLANNED_DELIVERY_DATE&#13;&#10;        FROM&#13;&#10;            ing_repairs_r3p36data.caufv CAUFV ,&#13;&#10;          ing_repairs_r3p36data.vbak VBAK&#13;&#10;        WHERE&#13;&#10;          VBAK.VBELN      = CAUFV.KDAUF&#13;&#10;          AND CAUFV.AUTYP = 30&#13;&#10;      ) A&#13;&#10;    GROUP BY&#13;&#10;      VBELN,&#13;&#10;      POSNR&#13;&#10;    ORDER BY&#13;&#10;      VBELN ASC,&#13;&#10;      PLANNED_DELIVERY_DATE DESC&#13;&#10;)  T5 on A.posnr = T5.posnr AND T5.vbeln = a.job_number &#13;&#10;    LEFT OUTER JOIN (SELECT&#13;&#10;      CALENDAR_DATE ,&#13;&#10;      FISCAL_WEEK_NUMBER ,&#13;&#10;      FISCAL_QUARTER_NUMBER ,&#13;&#10;      FISCAL_YEAR_NUMBER&#13;&#10;    FROM&#13;&#10;      PGSGRID.CALENDAR_D&#13;&#10;  )  D ON  (T5.PLANNED_DELIVERY_DATE) = D.CALENDAR_DATE&#13;&#10;    LEFT OUTER JOIN (SELECT&#13;&#10;      *&#13;&#10;    FROM&#13;&#10;      (SELECT&#13;&#10;          * ,&#13;&#10;          row_number () over (PARTITION BY VBELN ORDER BY VBELN, POSNR DESC) AS row_num&#13;&#10;        FROM&#13;&#10;          (SELECT DISTINCT&#13;&#10;              VBAP.VBELN AS VBELN ,&#13;&#10;              VBPA.POSNR AS POSNR ,&#13;&#10;              KNA1.KUNNR AS CUSTOMER_NUM ,&#13;&#10;              KNA1.NAME1 AS SHIP_TO_CUSTOMER_BY_LINE_ITEM ,&#13;&#10;              KNA1.STRAS&#13;&#10;              || ' / '&#13;&#10;              || KNA1.ORT01&#13;&#10;              || ' / '&#13;&#10;              || KNA1.REGIO&#13;&#10;              || ' / '&#13;&#10;              || KNA1.PSTLZ&#13;&#10;              || ' / '&#13;&#10;              || KNA1.LAND1 AS SHIP_TO_ADDRESS ,&#13;&#10;              KNA1.STRAS    AS STREET ,&#13;&#10;              KNA1.ORT01    AS CITY ,&#13;&#10;              KNA1.REGIO    AS STATE ,&#13;&#10;              KNA1.PSTLZ    AS ZIP ,&#13;&#10;              KNA1.LAND1    AS COUNTRY ,&#13;&#10;              VBAK.ZSARAME  AS ZSARAME&#13;&#10;            FROM&#13;&#10;               ing_repairs_r3p36data.vbap VBAP ,&#13;&#10;               ing_repairs_r3p36data.vbak VBAK ,&#13;&#10;              ing_repairs_r3p36data.vbpa VBPA ,&#13;&#10;               ing_repairs_r3p36data.kna1 KNA1&#13;&#10;            WHERE&#13;&#10;              VBPA.PARVW      = 'WE'&#13;&#10;              AND VBPA.POSNR::int IN (0, 20)&#13;&#10;              AND VBAP.VBELN  = VBAK.VBELN&#13;&#10;              AND VBPA.VBELN  = VBAP.VBELN&#13;&#10;              AND VBPA.KUNNR  = KNA1.KUNNR&#13;&#10;          ) A&#13;&#10;      ) B&#13;&#10;    WHERE&#13;&#10;      row_num = 1&#13;&#10;  ) LKP1&#13;&#10;    ON&#13;&#10;      A.JOB_NUMBER = LKP1.VBELN&#13;&#10;    LEFT OUTER JOIN&#13;&#10;      (SELECT DISTINCT&#13;&#10;          OBJNR&#13;&#10;        FROM&#13;&#10;          ing_repairs_r3p36data.jest JEST&#13;&#10;        WHERE&#13;&#10;          JEST.STAT        = 'I0076'&#13;&#10;          AND (JEST.INACT IS NULL&#13;&#10;          OR JEST.INACT    = '')&#13;&#10;      ) JEST&#13;&#10;    ON&#13;&#10;      COSP.OBJNR = JEST.OBJNR&#13;&#10;      LEFT OUTER JOIN ( SELECT DISTINCT&#13;&#10;      VBAP.VBELN        AS VBELN ,&#13;&#10;      VBAP.POSNR        AS POSNR ,&#13;&#10;      USER_STATUS.TXT30 AS JOB_STATUS&#13;&#10;    FROM&#13;&#10;      ing_repairs_r3p36data.PRPS PRPS1,&#13;&#10;      ing_repairs_r3p36data.PRPS PRPS2,&#13;&#10;      ing_repairs_r3p36data.CAUFV CAUFV,&#13;&#10;      ing_repairs_r3p36data.AFVC AFVC,&#13;&#10;      ing_repairs_r3p36data.JEST IND_OBJECT_STATUS,&#13;&#10;      ing_repairs_r3p36data.TJ02T USER_STATUS,&#13;&#10;      ing_repairs_r3p36data.VBAP VBAP,&#13;&#10;      (SELECT&#13;&#10;          VBAP.VBELN                                                      AS VBELN ,&#13;&#10;          VBAP.POSNR                                                      AS POSNR ,&#13;&#10;          MAX (SUBSTR (USER_STATUS.ISTAT, 2, LENGTH (USER_STATUS.ISTAT))) AS MAX_ISTAT&#13;&#10;        FROM&#13;&#10;          ing_repairs_r3p36data.PRPS PRPS1 ,&#13;&#10;          ing_repairs_r3p36data.PRPS PRPS2 ,&#13;&#10;          ing_repairs_r3p36data.CAUFV CAUFV ,&#13;&#10;          ing_repairs_r3p36data.AFVC AFVC ,&#13;&#10;          ing_repairs_r3p36data.JEST IND_OBJECT_STATUS ,&#13;&#10;          ing_repairs_r3p36data.TJ02T USER_STATUS ,&#13;&#10;          ing_repairs_r3p36datachar_length (USER_STATUS.ISTAT)) = A.MAX_ISTAT&#13;&#10;      AND VBAP.VBELN                                                     = A.VBELN&#13;&#10;      AND VBAP.POSNR                                                     = A.POSNR&#13;&#10;  ) LKP27&#13;&#10;    ON&#13;&#10;      A.JOB_NUMBER           = LKP27.VBELN&#13;&#10;      AND A.POSNR = LKP27.POSNR/*posnr as LINE ITEM NUMBER    ----------------    vbap.posnr AS line_item_number */&#13;&#10;     LEFT OUTER JOIN (SELECT&#13;&#10;      Z.VBELN      AS VBELN ,&#13;&#10;      Z.POSNR      AS POSNR ,&#13;&#10;      Z.JOB_STATUS AS JOB_STATUS&#13;&#10;    FROM&#13;&#10;      (SELECT&#13;&#10;          VBELN ,&#13;&#10;          POSNR ,&#13;&#10;          REPLACE (rtrim (txt1&#13;&#10;          || ' '&#13;&#10;          || txt2&#13;&#10;          || ' '&#13;&#10;          || txt3&#13;&#10;          || ' '&#13;&#10;          || txt4&#13;&#10;          || ' '&#13;&#10;          || txt5&#13;&#10;          || ' '&#13;&#10;          || txt6&#13;&#10;          || ' '&#13;&#10;          || txt7&#13;&#10;          || ' '&#13;&#10;          || txt8&#13;&#10;          || ' '&#13;&#10;          || txt9&#13;&#10;          || ' '&#13;&#10;          || txt10), ' ', ',') AS JOB_STATUS&#13;&#10;        FROM&#13;&#10;          (SELECT&#13;&#10;              VBELN ,&#13;&#10;              POSNR ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 1&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt1 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 2&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt2 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 3&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt3 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 4&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt4 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 5&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt5 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 6&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt6 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 7&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt7 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 8&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt8 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 9&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt9 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 10&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt10&#13;&#10;            FROM&#13;&#10;              (SELECT&#13;&#10;                  BC.VBELN ,&#13;&#10;                  BC.POSNR ,&#13;&#10;                  BC.TXT04 ,&#13;&#10;                  row_number () over (PARTITION BY BC.VBELN, BC.POSNR ORDER BY BC.VBELN, BC.POSNR, BC.TXT04) AS row_num&#13;&#10;                FROM&#13;&#10;                  (SELECT DISTINCT&#13;&#10;                      VBAP.VBELN AS VBELN ,&#13;&#10;                      VBAP.POSNR AS POSNR ,&#13;&#10;                      TJ02T.TXT04&#13;&#10;                    FROM&#13;&#10;                      ing_repairs_r3p36data.JEST JEST ,&#13;&#10;                      ing_repairs_r3p36data.VBAP VBAP ,&#13;&#10;                      ing_repairs_r3p36data.CAUFV CAUFV ,&#13;&#10;                      ing_repairs_r3p36data.VBAK VBAK ,&#13;&#10;                      ing_repairs_r3p36data.TJ02T TJ02T&#13;&#10;                    WHERE&#13;&#10;                      CAUFV.AUTYP                     = 30&#13;&#10;                      AND TJ02T.SPRAS                 = 'E'&#13;&#10;                      AND COALESCE (JEST.INACT, ' ') &lt;&gtr&#13;&#10;            GROUP BY&#13;&#10;              VBELN,&#13;&#10;              POSNR&#13;&#10;          ) A&#13;&#10;      --&#13;&#10;      UNION ALL&#13;&#10;      SELECT&#13;&#10;          VBELN ,&#13;&#10;          POSNR ,&#13;&#10;          REPLACE (rtrim (txt1&#13;&#10;          || ' '&#13;&#10;          || txt2&#13;&#10;          || ' '&#13;&#10;          || txt3&#13;&#10;          || ' '&#13;&#10;          || txT5&#13;&#10;          || ' '&#13;&#10;          || txt5&#13;&#10;          || ' '&#13;&#10;          || txt6&#13;&#10;          || ' '&#13;&#10;          || txt7&#13;&#10;          || ' '&#13;&#10;          || txt8&#13;&#10;          || ' '&#13;&#10;          || txt9&#13;&#10;          || ' '&#13;&#10;          || txt10), ' ', ',') AS JOB_STATUS&#13;&#10;        FROM&#13;&#10;          (SELECT&#13;&#10;              VBELN ,&#13;&#10;              POSNR ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 1&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt1 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 2&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt2 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 3&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt3 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 4&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt4 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 5&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt5 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 6&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt6 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 7&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt7 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 8&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt8 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 9&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt9 ,&#13;&#10;              MAX (&#13;&#10;              CASE&#13;&#10;                WHEN r.row_num = 10&#13;&#10;                THEN r.txt04&#13;&#10;                ELSE ''&#13;&#10;              END) AS txt10&#13;&#10;            FROM&#13;&#10;              (SELECT&#13;&#10;                  BC.VBELN ,&#13;&#10;                  BC.POSNR ,&#13;&#10;                  BC.TXT04 ,&#13;&#10;                  row_number () over (PARTITION BY BC.VBELN, BC.POSNR ORDER BY BC.VBELN, BC.POSNR, BC.TXT04) AS row_num&#13;&#10;                FROM&#13;&#10;                  (SELECT DISTINCT&#13;&#10;                      VBAP.VBELN AS VBELN ,&#13;&#10;                      VBAP.POSNR AS POSNR ,&#13;&#10;                      TJ02T.TXT04&#13;&#10;                    FROM&#13;&#10;                      ing_repairs_r3p36data.JEST JEST ,&#13;&#10;                      ing_repairs_r3p36data.VBAP VBAP ,&#13;&#10;                      ing_repairs_r3p36data.CAUFV CAUFV ,&#13;&#10;                      ing_repairs_r3p36data.PRPS PRPS1 ,&#13;&#10;                      ing_repairs_r3p36data.PROJ PROJ ,&#13;&#10;                      ing_repairs_r3p36data.TJ02T TJ02T&#13;&#10;                    WHERE&#13;&#10;                      TJ02T.SPRAS                     = 'E'&#13;&#10;                      AND COALESCE (JEST.INACT, ' ') &lt;&gt; 'X'&#13;&#10;                      AND PRPS1.PSPHI                 = PROJ.PSPNR&#13;&#10;                      AND CAUFV.PSPEL                 = PRPS1.PSPNR&#13;&#10;                      AND VBAP.VBELN                  = CAUFV.KDAUF&#13;&#10;                      AND JEST.OBJNR                  = PROJ.OBJNR&#13;&#10;                      AND JEST.STAT                   = TJ02T.ISTAT&#13;&#10;                    ORDER BY&#13;&#10;                      VBAP.VBELN,&#13;&#10;                      VBAP.POSNR&#13;&#10;                  ) BC&#13;&#10;              ) r&#13;&#10;            GROUP BY&#13;&#10;              VBELN,&#13;&#10;              POSNR&#13;&#10;          ) X&#13;&#10;      ) Z&#13;&#10;  ) LKP33&#13;&#10;    ON&#13;&#10;      A.JOB_NUMBER           = LKP33.VBELN&#13;&#10;      AND A.POSNR = LKP33.POSNR/*posnr as LINE ITEM NUMBER    ----------------    vbap.posnr AS line_item_number */&#13;&#10;    LEFT OUTER JOIN ( SELECT DISTINCT&#13;&#10;      VBAP.VBELN   AS VBELN ,&#13;&#10;      VBAP.POSNR   AS POSNR ,&#13;&#10;      VBKD.inco1   AS INCO_TERMS ,&#13;&#10;      VBKD.ZTERM   AS PAYMENT_TERMS ,&#13;&#10;      VBKD.BSTKD_E AS CUSTOMER_PO_BY_LINE_ITEM_NUM&#13;&#10;    FROM&#13;&#10;      ing_repairs_r3p36data.VBKD VBKD,&#13;&#10;      ing_repairs_r3p36data.VBAP VBAP&#13;&#10;    WHERE&#13;&#10;      VBAP.VBELN     = VBKD.VBELN&#13;&#10;      AND VBAP.POSNR = VBKD.POSNR&#13;&#10;  )  LKP37 /**/&#13;&#10;    ON&#13;&#10;      A.JOB_NUMBER           = LKP37.VBELN&#13;&#10;      AND A.POSNR = LKP37.POSNR/*posnr as LINE ITEM NUMBER    ----------------    vbap.posnr AS line_item_number */&#13;&#10;   -- left outer join cx_gridm_orders_agg_final_s1_new_vw_LKP29 LKP29 on A.plant = LKP29.WERKS&#13;&#10;    WHERE&#13;&#10;      COSP.VRGNG NOT IN ('KOAO', 'KOAL', 'KOAQ', 'KOAR') AND upper (coalesce(A.WBS_DESC,'NA')) NOT LIKE '%REWORK%' AND coalesce(A.WBS_TYPE, ' ') NOT LIKE '%RW%'&#13;&#10;    GROUP BY&#13;&#10;&#9;  A.JOB_NUMBER,&#13;&#10;      A.NETWR,&#13;&#10;     LKP37.PAYMENT_TERMS,&#13;&#10;     LKP27.JOB_STATUS,&#13;&#10;     LKP33.JOB_STATUS,&#13;&#10;     A.VTWEG,&#13;&#10;     A.WBS_DESC,&#13;&#10;     A.WBS_TYPE,&#13;&#10;     -- A.PLANT,&#13;&#10;      LKP1.COUNTRY,&#13;&#10;      ing_quarter&#13;&#10;)B &#13;&#10;--where B.JOB_NUMBER like '%80822%' or B.JOB_NUMBER like '%78604%' or&#13;&#10;--B.JOB_NUMBER like '%79651%' or&#13;&#10;--B.JOB_NUMBER like '%80123%' or&#13;&#10;--B.JOB_NUMBER like '%80124%' or&#13;&#10;--B.JOB_NUMBER like '%81243%' or&#13;&#10;--B.JOB_NUMBER like '%81245%' or&#13;&#10;--B.JOB_NUMBER like '%81247%' or&#13;&#10;--B.JOB_NUMBER like '%81248%' or&#13;&#10;--B.JOB_NUMBER like '%81525%' or&#13;&#10;--B.JOB_NUMBER like '%53006%' or&#13;&#10;--B.JOB_NUMBER like '%53008%'&#13;&#10;GROUP BY &#13;&#10; B.JOB_NUMBER, &#13;&#10; B.NETWR,&#13;&#10; B.ZTERM,&#13;&#10; B.tj02t_JOB_STATUS,&#13;&#10; B.STATUS,&#13;&#10; B.VTWEG,&#13;&#10; B.WBS_DESC,&#13;&#10; B.WBS_TYPE,&#13;&#10; B.COUNTRY,&#13;&#10; --B.PLANT,&#13;&#10; B.ing_quarter&#13;&#10;))C &#13;&#10;where C.NETWR &gt;0&#13;&#10;AND C.VTWEG = 'PS'&#13;&#10;AND COALESCE(C.JOB_STATUS,'OK') NOT IN ('Technically completed','Closed') &#13;&#10;AND COALESCE(C.STATUS,'OK') NOT IN ('TECO','CLSD') AND C.ZTERM &lt;&gt; 'IBS'&#13;&#10;--AND upper (coalesce(C.WBS_DESC,'NA')) NOT LIKE '%REWORK%' AND coalesce(C.WBS_TYPE, ' ') NOT LIKE '%RW%'&#13;&#10;--and C.JOB_NUMBER like '%83639%' &#13;&#10;--or C.JOB_NUMBER like '%78604%' or&#13;&#10;--C.JOB_NUMBER like '%79651%' or&#13;&#10;--C.JOB_NUMBER like '%80123%' or&#13;&#10;--C.JOB_NUMBER like '%80124%' or&#13;&#10;--C.JOB_NUMBER like '%81243%' or&#13;&#10;--C.JOB_NUMBER like '%81245%' or&#13;&#10;--C.JOB_NUMBER like '%81247%' or&#13;&#10;--C.JOB_NUMBER like '%81248%' or&#13;&#10;--C.JOB_NUMBER like '%81525%' or&#13;&#10;--C.JOB_NUMBER like '%53006%' or&#13;&#10;--C.JOB_NUMBER like '%53008%'&#13;&#10;group BY&#13;&#10;C.JOB_NUMBER,&#13;&#10;C.NETWR,&#13;&#10;--C.ZTERM,&#13;&#10;--C.JOB_STATUS,&#13;&#10;--C.STATUS,&#13;&#10;--C.VTWEG,&#13;&#10;--C.WBS_DESC,&#13;&#10;--C.WBS_TYPE,&#13;&#10;--C.COUNTRY,&#13;&#10;source,&#13;&#10;--C.PLANT,&#13;&#10;C.ing_quarter&#13;&#10;order by &#13;&#10;C.JOB_NUMBER ASC&quot;"/>
    <elementParameter field="MAPPING_TYPE" name="MAPPING" show="false" value="postgres_id"/>
    <elementParameter field="CLOSED_LIST" name="DB_DRIVER" show="false" value="POSTGRESQL"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" show="false" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" value="ISO-8859-15"/>
    <elementParameter field="CHECK" name="USE_CURSOR" value="false"/>
    <elementParameter field="TEXT" name="CURSOR_SIZE" show="false" value="1000"/>
    <elementParameter field="CHECK" name="TRIM_ALL_COLUMN" value="false"/>
    <elementParameter field="TABLE" name="TRIM_COLUMN">
      <elementValue elementRef="SCHEMA_COLUMN" value="project_number"/>
      <elementValue elementRef="TRIM" value="false"/>
      <elementValue elementRef="SCHEMA_COLUMN" value="ing_quarter"/>
      <elementValue elementRef="TRIM" value="false"/>
      <elementValue elementRef="SCHEMA_COLUMN" value="ing_backlog_amount"/>
      <elementValue elementRef="TRIM" value="false"/>
      <elementValue elementRef="SCHEMA_COLUMN" value="ing_cost"/>
      <elementValue elementRef="TRIM" value="false"/>
      <elementValue elementRef="SCHEMA_COLUMN" value="source"/>
      <elementValue elementRef="TRIM" value="false"/>
    </elementParameter>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tGreenplumInput_1">
      <column comment="" key="false" length="-1" name="project_number" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="VARCHAR" type="id_String" usefulColumn="true"/>
      <column comment="" key="false" length="-1" name="ing_quarter" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="VARCHAR" type="id_String" usefulColumn="true"/>
      <column comment="" key="false" length="-1" name="ing_backlog_amount" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="FLOAT8" type="id_Double" usefulColumn="true"/>
      <column comment="" key="false" length="-1" name="ing_cost" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="FLOAT8" type="id_Double" usefulColumn="true"/>
      <column comment="" key="false" length="-1" name="source" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="VARCHAR" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tGEGreenplumGPLoad" offsetLabelX="0" offsetLabelY="0" posX="288" posY="96" sizeX="32" sizeY="35">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tGEGreenplumGPLoad_1"/>
    <elementParameter field="CHECK" name="STARTABLE" show="false" value="true"/>
    <metadata connector="FLOW" name="tGEGreenplumGPLoad_1">
      <column comment="" key="false" length="-1" name="project_number" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="VARCHAR" type="id_String" usefulColumn="true"/>
      <column comment="" key="false" length="-1" name="ing_quarter" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="VARCHAR" type="id_String" usefulColumn="true"/>
      <column comment="" key="false" length="-1" name="ing_backlog_amount" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="FLOAT8" type="id_Double" usefulColumn="true"/>
      <column comment="" key="false" length="-1" name="ing_cost" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="FLOAT8" type="id_Double" usefulColumn="true"/>
      <column comment="" key="false" length="-1" name="source" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="VARCHAR" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tGreenplumClose" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="480" posY="288">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tGreenplumClose_1"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" value="tGreenplumConnection_2"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
  </node>
  <node componentName="tGreenplumInput" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="416" posY="96">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tGreenplumInput_2"/>
    <elementParameter field="CHECK" name="USE_EXISTING_CONNECTION" value="true"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" value="tGreenplumConnection_2"/>
    <elementParameter field="TEXT" name="HOST" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="TYPE" show="false" value="PostgreSQL"/>
    <elementParameter field="TEXT" name="PORT" show="false" value="&quot;5432&quot;"/>
    <elementParameter field="TEXT" name="DBNAME" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="SCHEMA_DB" show="false" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="USER" show="false" value="&quot;&quot;"/>
    <elementParameter field="PASSWORD" name="PASS" show="false" value="0RMsyjmybrE="/>
    <elementParameter field="DBTABLE" name="TABLE" value="&quot;&quot;"/>
    <elementParameter field="QUERYSTORE_TYPE" name="QUERYSTORE" value="&quot;&quot;"/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:REPOSITORY_QUERYSTORE_TYPE" show="false" value=""/>
    <elementParameter field="TECHNICAL" name="QUERYSTORE:QUERYSTORE_TYPE" value="BUILT_IN"/>
    <elementParameter field="GUESS_SCHEMA" name="GUESS_SCHEMA" value="&quot;&quot;"/>
    <elementParameter field="MEMO_SQL" name="QUERY" value="&quot;select * from (&#13;&#10;&#9;SELECT  &#13;&#10;&#9;FSC.PROJ_NUM project_number, &#13;&#10;&#9;EXTRACT(YEAR FROM (Promise_date_calculated))||'-Q'||EXTRACT(QUARTER FROM (Promise_date_calculated)) as ing_quarter,&#13;&#10;&#9;sum(round(FUNC_CURR_BACKLOG_AMT*COALESCE(PRCTG,1))) Backlog_amt,&#13;&#10;&#9;sum(cost_amt) cost,&#13;&#10;&#9;cast ('Charlie' as text) as Source--,&#13;&#10;&#9;--FUNC_CURR_BACKLOG_AMT,PRCTG&#13;&#10;&#9;FROM (&#13;&#10;&#9;select *,&#13;&#10;&#9;round(FUNC_CURR_BACKLOG_AMT*DECODE(PROJECT_CURRENCY_CODE,'USD',1,COALESCE(CONVERSION_RATE,1))*(COST_RATIO)) cost_amt,&#13;&#10;&#9;CASE WHEN &#13;&#10;&#9;EXTRACT(YEAR FROM Promise_date) &lt; EXTRACT(YEAR FROM CURRENT_DATE) OR EXTRACT(YEAR FROM Promise_date) = EXTRACT(year FROM CURRENT_DATE)&#13;&#10;&#9;AND EXTRACT(QUARTER FROM Promise_date) &lt; EXTRACT(QUARTER FROM CURRENT_DATE)&#13;&#10;&#9;THEN current_date+4*365&#13;&#10;&#9;ELSE Promise_date&#13;&#10;&#9;END AS Promise_date_calculated&#13;&#10;&#9;from &#13;&#10;&#9;(&#13;&#10;&#9;SELECT DISTINCT&#13;&#10;&#9; PROJ_ALL.SEGMENT1 PROJ_NUM,&#13;&#10;&#9;(CASE&#13;&#10;&#9; WHEN UPPER(PROJ_ALL.SEGMENT1) IN ('10189605')&#13;&#10;&#9;THEN 'R'&#13;&#10;&#9; WHEN UPPER(TYPES_ALL.ATTRIBUTE7) = 'RECEIVABLES'&#13;&#10;&#9;THEN 'F'&#13;&#10;&#9; WHEN UPPER(TYPES_ALL.ATTRIBUTE7) = 'REVENUE'&#13;&#10;&#9;THEN 'F'&#13;&#10;&#9; WHEN UPPER(TYPES_ALL.ATTRIBUTE7) = 'PROJECTS'&#13;&#10;&#9; THEN 'R'&#13;&#10;&#9;END) BACKLOG_TYPE,&#13;&#10;&#9;PROJECT_CURRENCY_CODE,&#13;&#10;&#9;PTSK.COMPLETION_DATE PROJ_OUTG_END_DT,&#13;&#10;&#9;round(final.PROJFUNC_ALLOCATED_AMOUNT- final.FUNC_CURR_SALES_TO_DATE)FUNC_CURR_BACKLOG_AMT  ,&#13;&#10;&#9;round((final.PROJFUNC_ALLOCATED_AMOUNT- final.FUNC_CURR_SALES_TO_DATE)*COALESCE(PRCTG,1)) ALLOCATED_BACKLOG ,&#13;&#10;&#9;case when &#13;&#10;&#9;(final.PROJFUNC_ALLOCATED_AMOUNT*COALESCE(PRCTG,1))/COALESCE((final.PROJFUNC_ALLOCATED_AMOUNT- final.FUNC_CURR_SALES_TO_DATE),0)  &gt;= 1 or &#13;&#10;&#9;(final.PROJFUNC_ALLOCATED_AMOUNT*COALESCE(PRCTG,1))/COALESCE((final.PROJFUNC_ALLOCATED_AMOUNT- final.FUNC_CURR_SALES_TO_DATE),0) &lt;=0 then 0.65&#13;&#10;&#9;else &#13;&#10;&#9;(final.PROJFUNC_ALLOCATED_AMOUNT*COALESCE(PRCTG,1))/COALESCE((final.PROJFUNC_ALLOCATED_AMOUNT- final.FUNC_CURR_SALES_TO_DATE),0) &#13;&#10;&#9;--1 &#13;&#10;&#9;end &#13;&#10;&#9;as cost_ratio ,&#13;&#10;&#9;exg.conversion_rate,&#13;&#10;&#9;CASE&#13;&#10;&#9;WHEN LENGTH(BUDGET_PCTG.YYYYMMDD)=10 AND BUDGET_PCTG.BUDGET_FORCST_SALES_AMT IS NOT NULL &#13;&#10;&#9;THEN cast(BUDGET_PCTG.YYYYMMDD as date)&#13;&#10;&#9;ELSE CAST(PTSK.COMPLETION_DATE AS DATE)&#13;&#10;&#9;END AS Promise_date,&#13;&#10;&#9;CUSTOMER_DET.CUSTOMER_NAME,&#13;&#10;&#9;BUDGET_PCTG.PRCTG&#13;&#10;&#9;FROM&#13;&#10;&#9;(&#13;&#10;&#9;SELECT COALESCE(bill_main2.func_curr_sales_to_date, 0) func_curr_sales_to_date, &#13;&#10;&#9;&#9;  COALESCE(bill_main2.bill_period_functional_bill, 0) bill_period_functional_bill ,&#13;&#10;&#9;&#9;  PROJ_FUND.* ,&#13;&#10;&#9;&#9;  BILL_MAIN2.PROJECT_TYPE &#13;&#10;&#9;&#9;FROM &#13;&#10;&#9;&#9;(&#13;&#10;&#9;SELECT &#13;&#10;&#9;FUND.PROJECT_ID,&#13;&#10;&#9;FUND.TASK_ID TASK_ID,&#13;&#10;&#9;MAX(AGMT.ATTRIBUTE9) PROJ_CLSS_CTGRY_DESC,&#13;&#10;&#9;MAX(AGMT.AGREEMENT_NUM)                    AS AGMT_NUM,&#13;&#10;&#9;MAX(AGMT.CREATION_DATE)                    AS AGMT_DT,&#13;&#10;&#9;SUM(COALESCE(PROJFUNC_ALLOCATED_AMOUNT,0)) AS PROJFUNC_ALLOCATED_AMOUNT,&#13;&#10;&#9;PROJ_ALL.PROJECT_CURRENCY_CODE&#13;&#10;&#9;FROM &#13;&#10;&#9;  (SELECT PROJECT_ID,SEGMENT1,PROJECT_TYPE,ORG_ID,PROJECT_CURRENCY_CODE&#13;&#10;&#9;  FROM PGSCHARLIE.PA_PROJECTS_ALL-- WHERE SEGMENT1 = '10186211'&#13;&#10;&#9;  ) PROJ_ALL&#13;&#10;&#9;  JOIN    &#13;&#10;&#9;  (SELECT PROJECT_ID,TASK_ID,PROJFUNC_ALLOCATED_AMOUNT,AGREEMENT_ID &#13;&#10;&#9;  FROM PGSCHARLIE.PA_PROJECT_FUNDINGS)          AS FUND&#13;&#10;&#9;  ON&#13;&#10;&#9;  PROJ_ALL.PROJECT_ID = FUND.PROJECT_ID&#13;&#10;&#9;  LEFT OUTER JOIN &#13;&#10;&#9;(SELECT AGREEMENT_ID,ATTRIBUTE9,AGREEMENT_NUM,CREATION_DATE &#13;&#10;&#9;FROM PGSCHARLIE.PA_AGREEMENTS_ALL) AS AGMT&#13;&#10;&#9;ON (FUND.AGREEMENT_ID = AGMT.AGREEMENT_ID)&#13;&#10;&#9;GROUP BY &#13;&#10;&#9;FUND.PROJECT_ID, FUND.TASK_ID,PROJ_ALL.PROJECT_CURRENCY_CODE&#13;&#10;&#9;) PROJ_FUND&#13;&#10;&#9;LEFT JOIN&#13;&#10;&#9;&#9;  (&#13;&#10;&#9;&#9;  SELECT bill_main.*, &#13;&#10;&#9;&#9;&#9;bill_select_period.bill_period_functional_bill &#13;&#10;&#9;&#9;  FROM &#13;&#10;&#9;&#9;&#9;(&#13;&#10;&#9;SELECT DISTINCT AA.PROJECT_ID,&#13;&#10;&#9;&#9;&#9;AA.TASK_ID task_id,&#13;&#10;&#9;&#9;&#9;AA.TASK_NUMBER,&#13;&#10;&#9;&#9;&#9;AA.PROJECT_TYPE,&#13;&#10;&#9;&#9;&#9;SUM(COALESCE(AA.BLNG_FUNCNL_BILL_AMT,0)) FUNC_CURR_SALES_TO_DATE&#13;&#10;&#9;&#9;  FROM&#13;&#10;&#9;&#9;&#9;(&#13;&#10;&#9;&#9;&#9;&#9;&#9;SELECT &#13;&#10;&#9;&#9;&#9;I.PROJECT_ID PROJECT_ID,&#13;&#10;&#9;&#9;&#9;I.TASK_ID TASK_ID,&#13;&#10;&#9;&#9;&#9;PTSK.TASK_NUMBER,&#13;&#10;&#9;&#9;&#9;PROJ_TYPES.PROJECT_TYPE,&#13;&#10;&#9;&#9;&#9;SUM(I.PROJFUNC_BILL_AMOUNT) BLNG_FUNCNL_BILL_AMT&#13;&#10;&#9;  FROM &#13;&#10;&#9;  (select ACCTD_CURR_CODE,INV_CURRENCY_CODE,INVOICE_DATE,AGREEMENT_ID,&#13;&#10;&#9;  RA_INVOICE_NUMBER,ACCTD_EXCHG_RATE,TRANSFER_STATUS_CODE,&#13;&#10;&#9;  SYSTEM_REFERENCE,DRAFT_INVOICE_NUM,DRAFT_INVOICE_NUM_CREDITED,&#13;&#10;&#9;  CREATION_DATE,GENERATION_ERROR_FLAG,TRANSFER_REJECTION_REASON,&#13;&#10;&#9;  GL_DATE,BILL_THROUGH_DATE,PROJECT_ID,unearned_code_combination_id,&#13;&#10;&#9;  unbilled_code_combination_id from pgscharlie.PA_DRAFT_INVOICES_ALL&#13;&#10;&#9;  WHERE UPPER(TRANSFER_STATUS_CODE) = 'A') IA&#13;&#10;&#9;  join &#13;&#10;&#9;  (select PROJECT_ID,TASK_ID,LINE_NUM,TEXT,INV_AMOUNT,EVENT_NUM,&#13;&#10;&#9;  FUNDING_BILL_AMOUNT,PROJFUNC_BILL_AMOUNT,DRAFT_INVOICE_NUM &#13;&#10;&#9;  from pgscharlie.PA_DRAFT_INVOICE_ITEMS) I&#13;&#10;&#9;  on IA.PROJECT_ID = I.PROJECT_ID&#13;&#10;&#9;  and IA.DRAFT_INVOICE_NUM = I.DRAFT_INVOICE_NUM&#13;&#10;&#9;  join&#13;&#10;&#9;  (select segment2,code_combination_id from pgscharlie.gl_code_combinations) gl&#13;&#10;&#9;  on coalesce(IA.unearned_code_combination_id,&#13;&#10;&#9;IA.unbilled_code_combination_id) =  gl.code_combination_id&#13;&#10;&#9;  JOIN &#13;&#10;&#9;  (SELECT PROJECT_ID,SEGMENT1,PROJECT_TYPE,ORG_ID FROM PGSCHARLIE.PA_PROJECTS_ALL &#13;&#10;&#9;  --WHERE SEGMENT1 = '10186211'&#13;&#10;&#9;  ) PROJ_ALL&#13;&#10;&#9;  ON (IA.PROJECT_ID = PROJ_ALL.PROJECT_ID)    &#13;&#10;&#9;  JOIN &#13;&#10;&#9;  (SELECT PROJECT_TYPE,ORG_ID FROM PGSCHARLIE.PA_PROJECT_TYPES_ALL &#13;&#10;&#9;  WHERE UPPER(ATTRIBUTE10) = 'N') PROJ_TYPES&#13;&#10;&#9;  ON (PROJ_ALL.PROJECT_TYPE = PROJ_TYPES.PROJECT_TYPE&#13;&#10;&#9;  AND PROJ_ALL.ORG_ID       = PROJ_TYPES.ORG_ID)&#13;&#10;&#9;  JOIN&#13;&#10;&#9;  (SELECT ORGANIZATION_ID,NAME FROM PGSCHARLIE.HR_ALL_ORGANIZATION_UNITS &#13;&#10;&#9;  WHERE UPPER(NAME) LIKE 'OU%') OU&#13;&#10;&#9;  ON&#13;&#10;&#9;  PROJ_ALL.ORG_ID = OU.ORGANIZATION_ID &#13;&#10;&#9;  JOIN&#13;&#10;&#9;  (SELECT TASK_ID,TASK_NUMBER FROM PGSCHARLIE.PA_TASKS) PTSK&#13;&#10;&#9;  ON I.TASK_ID = PTSK.TASK_ID&#13;&#10;&#9;  GROUP BY &#13;&#10;&#9;  I.PROJECT_ID,&#13;&#10;&#9;  I.TASK_ID,&#13;&#10;&#9;  PTSK.TASK_NUMBER,&#13;&#10;&#9;  PROJ_TYPES.PROJECT_TYPE&#13;&#10;&#9;  UNION&#13;&#10;&#9;  SELECT &#13;&#10;&#9;  REV.PROJECT_ID,&#13;&#10;&#9;  REV.TASK_ID,&#13;&#10;&#9;  PTSK.TASK_NUMBER,&#13;&#10;&#9;  PROJ_TYPES.PROJECT_TYPE,&#13;&#10;&#9;  SUM(REV.PROJFUNC_REVENUE_AMOUNT) BLNG_FUNCNL_BILL_AMT&#13;&#10;&#9;  FROM &#13;&#10;&#9;  (SELECT PROJECT_ID,TASK_ID,DRAFT_REVENUE_NUM,PROJFUNC_REVENUE_AMOUNT &#13;&#10;&#9;  FROM PGSCHARLIE.PA_DRAFT_REVENUE_ITEMS&#13;&#10;&#9;   WHERE UPPER(REVENUE_SOURCE) &lt;&gt; 'DUMMY') REV&#13;&#10;&#9;  JOIN &#13;&#10;&#9;  (SELECT PROJECT_ID,DRAFT_REVENUE_NUM FROM PGSCHARLIE.PA_DRAFT_REVENUES_ALL &#13;&#10;&#9;  WHERE UPPER(TRANSFER_STATUS_CODE) = 'A') REV_ALL&#13;&#10;&#9;  ON (REV.PROJECT_ID        = REV_ALL.PROJECT_ID&#13;&#10;&#9;  AND REV.DRAFT_REVENUE_NUM = REV_ALL.DRAFT_REVENUE_NUM)&#13;&#10;&#9;  JOIN &#13;&#10;&#9;  (SELECT PROJECT_ID,ORG_ID,PROJECT_TYPE FROM PGSCHARLIE.PA_PROJECTS_ALL &#13;&#10;&#9;  ) PROJ_ALL&#13;&#10;&#9;  ON (REV.PROJECT_ID = PROJ_ALL.PROJECT_ID)&#13;&#10;&#9;  JOIN &#13;&#10;&#9;  (SELECT PROJECT_TYPE,ORG_ID FROM PGSCHARLIE.PA_PROJECT_TYPES_ALL &#13;&#10;&#9;  WHERE UPPER(ATTRIBUTE10) = 'Y') PROJ_TYPES&#13;&#10;&#9;  ON (PROJ_ALL.PROJECT_TYPE = PROJ_TYPES.PROJECT_TYPE&#13;&#10;&#9;  AND PROJ_ALL.ORG_ID       = PROJ_TYPES.ORG_ID)&#13;&#10;&#9;  JOIN &#13;&#10;&#9;  (SELECT PROJECT_ID,TASK_ID FROM PGSCHARLIE.PA_TASKS) PA_TASK&#13;&#10;&#9;  ON ( REV.PROJECT_ID = PA_TASK.PROJECT_ID&#13;&#10;&#9;  AND REV.TASK_ID = PA_TASK.TASK_ID )&#13;&#10;&#9;  JOIN&#13;&#10;&#9;  (SELECT ORGANIZATION_ID,NAME FROM PGSCHARLIE.HR_ALL_ORGANIZATION_UNITS &#13;&#10;&#9;  WHERE UPPER(NAME) LIKE 'OU%') OU&#13;&#10;&#9;  ON&#13;&#10;&#9;  PROJ_ALL.ORG_ID = OU.ORGANIZATION_ID&#13;&#10;&#9;  JOIN&#13;&#10;&#9;  (SELECT TASK_ID,TASK_NUMBER FROM PGSCHARLIE.PA_TASKS) PTSK&#13;&#10;&#9;  ON REV.TASK_ID = PTSK.TASK_ID &#13;&#10;&#9;  GROUP BY &#13;&#10;&#9;  REV.PROJECT_ID,&#13;&#10;&#9;  REV.TASK_ID,&#13;&#10;&#9;  PTSK.TASK_NUMBER,&#13;&#10;&#9;  PROJ_TYPES.PROJECT_TYPE&#13;&#10;&#9;  ) AA&#13;&#10;&#9;  GROUP BY &#13;&#10;&#9;  AA.PROJECT_ID,&#13;&#10;&#9;  AA.TASK_ID,&#13;&#10;&#9;  AA.TASK_NUMBER,&#13;&#10;&#9;  AA.PROJECT_TYPE&#13;&#10;&#9;ORDER BY&#13;&#10;&#9;AA.TASK_NUMBER&#13;&#10;&#9;) BILL_MAIN&#13;&#10;&#9;LEFT JOIN&#13;&#10;&#9;(&#13;&#10;&#9;SELECT &#13;&#10;&#9;&#9;&#9;I.PROJECT_ID PROJECT_ID,&#13;&#10;&#9;&#9;&#9;I.TASK_ID TASK_ID,&#13;&#10;&#9;&#9;&#9;PTSK.TASK_NUMBER,&#13;&#10;&#9;&#9;&#9;SUM(I.PROJFUNC_BILL_AMOUNT) bill_period_functional_bill,&#13;&#10;&#9;&#9;&#9;SUM(I.INV_AMOUNT)  bill_period_funding_bill&#13;&#10;&#9;  FROM &#13;&#10;&#9;  (select ACCTD_CURR_CODE,INV_CURRENCY_CODE,INVOICE_DATE,AGREEMENT_ID,&#13;&#10;&#9;  RA_INVOICE_NUMBER,ACCTD_EXCHG_RATE,TRANSFER_STATUS_CODE,&#13;&#10;&#9;  SYSTEM_REFERENCE,DRAFT_INVOICE_NUM,DRAFT_INVOICE_NUM_CREDITED,&#13;&#10;&#9;  CREATION_DATE,GENERATION_ERROR_FLAG,TRANSFER_REJECTION_REASON,&#13;&#10;&#9;  GL_DATE,BILL_THROUGH_DATE,PROJECT_ID,unearned_code_combination_id,&#13;&#10;&#9;  unbilled_code_combination_id from pgscharlie.PA_DRAFT_INVOICES_ALL&#13;&#10;&#9;  WHERE UPPER(TRANSFER_STATUS_CODE) = 'A') IA&#13;&#10;&#9;  join &#13;&#10;&#9;  (select PROJECT_ID,TASK_ID,LINE_NUM,TEXT,INV_AMOUNT,EVENT_NUM,&#13;&#10;&#9;  FUNDING_BILL_AMOUNT,PROJFUNC_BILL_AMOUNT,DRAFT_INVOICE_NUM &#13;&#10;&#9;  from pgscharlie.PA_DRAFT_INVOICE_ITEMS) I&#13;&#10;&#9;  on IA.PROJECT_ID = I.PROJECT_ID&#13;&#10;&#9;  and IA.DRAFT_INVOICE_NUM = I.DRAFT_INVOICE_NUM&#13;&#10;&#9;  join&#13;&#10;&#9;  (select segment2,code_combination_id from pgscharlie.gl_code_combinations) gl&#13;&#10;&#9;  on coalesce(IA.unearned_code_combination_id,&#13;&#10;&#9;IA.unbilled_code_combination_id) =  gl.code_combination_id&#13;&#10;&#9;  JOIN &#13;&#10;&#9;  (SELECT PROJECT_ID,SEGMENT1,PROJECT_TYPE,ORG_ID FROM PGSCHARLIE.PA_PROJECTS_ALL &#13;&#10;&#9;  --WHERE SEGMENT1 = '10186211'&#13;&#10;&#9;  ) PROJ_ALL&#13;&#10;&#9;  ON (IA.PROJECT_ID = PROJ_ALL.PROJECT_ID)    &#13;&#10;&#9;  JOIN &#13;&#10;&#9;  (SELECT PROJECT_TYPE,ORG_ID FROM PGSCHARLIE.PA_PROJECT_TYPES_ALL &#13;&#10;&#9;  WHERE UPPER(ATTRIBUTE10) = 'N') PROJ_TYPES&#13;&#10;&#9;  ON (PROJ_ALL.PROJECT_TYPE = PROJ_TYPES.PROJECT_TYPE&#13;&#10;&#9;  AND PROJ_ALL.ORG_ID       = PROJ_TYPES.ORG_ID)&#13;&#10;&#9;  JOIN&#13;&#10;&#9;  (SELECT TASK_ID,TASK_NUMBER FROM PGSCHARLIE.PA_TASKS) PTSK&#13;&#10;&#9;  ON I.TASK_ID = PTSK.TASK_ID&#13;&#10;&#9;  GROUP BY &#13;&#10;&#9;  I.PROJECT_ID,&#13;&#10;&#9;  I.TASK_ID,&#13;&#10;&#9;  PTSK.TASK_NUMBER&#13;&#10;&#9;  UNION ALL&#13;&#10;&#9;  SELECT &#13;&#10;&#9;  REV.PROJECT_ID,&#13;&#10;&#9;  REV.TASK_ID,&#13;&#10;&#9;  PTSK.TASK_NUMBER,&#13;&#10;&#9;  SUM(REV.PROJFUNC_REVENUE_AMOUNT) bill_period_functional_bill,&#13;&#10;&#9;  SUM(REV.PROJFUNC_REVENUE_AMOUNT) bill_period_funding_bill&#13;&#10;&#9;  FROM &#13;&#10;&#9;  (SELECT PROJECT_ID,TASK_ID,DRAFT_REVENUE_NUM,PROJFUNC_REVENUE_AMOUNT &#13;&#10;&#9;  FROM PGSCHARLIE.PA_DRAFT_REVENUE_ITEMS&#13;&#10;&#9;   WHERE UPPER(REVENUE_SOURCE) &lt;&gt; 'DUMMY') REV&#13;&#10;&#9;  JOIN &#13;&#10;&#9;  (SELECT PROJECT_ID,DRAFT_REVENUE_NUM FROM PGSCHARLIE.PA_DRAFT_REVENUES_ALL &#13;&#10;&#9;  WHERE UPPER(TRANSFER_STATUS_CODE) = 'A') REV_ALL&#13;&#10;&#9;  ON (REV.PROJECT_ID        = REV_ALL.PROJECT_ID&#13;&#10;&#9;  AND REV.DRAFT_REVENUE_NUM = REV_ALL.DRAFT_REVENUE_NUM)&#13;&#10;&#9;  JOIN &#13;&#10;&#9;  (SELECT PROJECT_ID,ORG_ID,PROJECT_TYPE FROM PGSCHARLIE.PA_PROJECTS_ALL &#13;&#10;&#9;  ) PROJ_ALL&#13;&#10;&#9;  ON (REV.PROJECT_ID = PROJ_ALL.PROJECT_ID)&#13;&#10;&#9;  JOIN &#13;&#10;&#9;  (SELECT PROJECT_TYPE,ORG_ID FROM PGSCHARLIE.PA_PROJECT_TYPES_ALL &#13;&#10;&#9;  WHERE UPPER(ATTRIBUTE10) = 'Y') PROJ_TYPES&#13;&#10;&#9;  ON (PROJ_ALL.PROJECT_TYPE = PROJ_TYPES.PROJECT_TYPE&#13;&#10;&#9;  AND PROJ_ALL.ORG_ID       = PROJ_TYPES.ORG_ID)&#13;&#10;&#9;  JOIN &#13;&#10;&#9;  (SELECT PROJECT_ID,TASK_ID FROM PGSCHARLIE.PA_TASKS) PA_TASK&#13;&#10;&#9;  ON ( REV.PROJECT_ID = PA_TASK.PROJECT_ID&#13;&#10;&#9;  AND REV.TASK_ID = PA_TASK.TASK_ID )&#13;&#10;&#9;  JOIN&#13;&#10;&#9;  (SELECT TASK_ID,TASK_NUMBER FROM PGSCHARLIE.PA_TASKS) PTSK&#13;&#10;&#9;  ON REV.TASK_ID = PTSK.TASK_ID &#13;&#10;&#9;  GROUP BY &#13;&#10;&#9;  REV.PROJECT_ID,&#13;&#10;&#9;  REV.TASK_ID,&#13;&#10;&#9;  PTSK.TASK_NUMBER&#13;&#10;&#9;) bill_select_period&#13;&#10;&#9;ON&#13;&#10;&#9;bill_main.project_ID = bill_select_period.project_ID  &#13;&#10;&#9; AND bill_main.task_ID  = bill_select_period.task_ID&#13;&#10;&#9;) bill_main2&#13;&#10;&#9;ON&#13;&#10;&#9;PROJ_FUND.project_id = bill_main2.project_id&#13;&#10;&#9;AND PROJ_FUND.task_id = bill_main2.task_id &#13;&#10;&#9;) FINAL&#13;&#10;&#9;LEFT JOIN&#13;&#10;&#9;(SELECT PROJECT_ID,SEGMENT1,ORG_ID,PROJECT_TYPE,DESCRIPTION&#13;&#10;&#9;FROM PGSCHARLIE.PA_PROJECTS_ALL) PROJ_ALL ON (FINAL.PROJECT_ID = PROJ_ALL.PROJECT_ID)&#13;&#10;&#9;LEFT JOIN&#13;&#10;&#9;(SELECT TASK_ID,TASK_NUMBER,ATTRIBUTE1,ATTRIBUTE2,ATTRIBUTE3,ATTRIBUTE6,&#13;&#10;&#9;COMPLETION_DATE,DESCRIPTION FROM PGSCHARLIE.PA_TASKS) PTSK&#13;&#10;&#9;ON (FINAL.TASK_ID = PTSK.TASK_ID)&#13;&#10;&#9;LEFT JOIN&#13;&#10;&#9;(SELECT PROJECT_TYPE,ORG_ID,ATTRIBUTE7 FROM PGSCHARLIE.PA_PROJECT_TYPES_ALL) TYPES_ALL&#13;&#10;&#9;ON (PROJ_ALL.PROJECT_TYPE = TYPES_ALL.PROJECT_TYPE&#13;&#10;&#9;AND PROJ_ALL.ORG_ID        =TYPES_ALL.ORG_ID )&#13;&#10;&#9;LEFT JOIN&#13;&#10;&#9;&#9;(SELECT a.PROJECT_ID PROJECT_ID,&#13;&#10;&#9;&#9;  COALESCE(b.ACCOUNT_NAME,c.PARTY_NAME) CUSTOMER_NAME,&#13;&#10;&#9;&#9;  b.CUSTOMER_TYPE&#13;&#10;&#9;&#9;FROM &#13;&#10;&#9;&#9;(select PROJECT_ID,BILL_TO_CUSTOMER_ID,SHIP_TO_CUSTOMER_ID,DEFAULT_TOP_TASK_CUST_FLAG &#13;&#10;&#9;&#9;&#9;&#9;&#9;from PGSCHARLIE.PA_PROJECT_CUSTOMERS) a&#13;&#10;&#9;&#9;LEFT OUTER JOIN &#13;&#10;&#9;&#9;(select ACCOUNT_NAME,CUSTOMER_TYPE,CUST_ACCOUNT_ID,&#13;&#10;&#9;PARTY_ID from PGSCHARLIE.HZ_CUST_ACCOUNTS) b&#13;&#10;&#9;&#9;ON ( a.BILL_TO_CUSTOMER_ID =b.CUST_ACCOUNT_ID )&#13;&#10;&#9;&#9;LEFT OUTER JOIN &#13;&#10;&#9;&#9;(select PARTY_NAME,PARTY_ID from PGSCHARLIE.HZ_PARTIES) c&#13;&#10;&#9;&#9;ON ( b.PARTY_ID                          =c.PARTY_ID )&#13;&#10;&#9;&#9;WHERE a.DEFAULT_TOP_TASK_CUST_FLAG       = 'Y'&#13;&#10;&#9;&#9;) CUSTOMER_DET ON ( FINAL.PROJECT_ID = CUSTOMER_DET.PROJECT_ID )&#13;&#10;&#9;LEFT OUTER JOIN&#13;&#10;&#9;(SELECT PROJECT_ID,&#13;&#10;&#9;TASK_ID,&#13;&#10;&#9;COALESCE(SUBSTR(CALENDAR_FISCL_YR_MO_NUM,1,4),&#13;&#10;&#9;  TO_CHAR(CURRENT_DATE,'YYYY'))||'-'&#13;&#10;&#9;  ||COALESCE(SUBSTR(CALENDAR_FISCL_YR_MO_NUM,5,2),&#13;&#10;&#9;  TO_CHAR(CURRENT_DATE,'MM'))||'-05' AS YYYYMMDD,&#13;&#10;&#9;  CAST(CALENDAR_FISCL_YR_MO_NUM AS NUMERIC) CALENDAR_FISCL_YR_MO_NUM,&#13;&#10;&#9;-- CALENDAR_FISCL_YR_MO_NUM,&#13;&#10;&#9;BUDGET_FORCST_SALES_AMT,&#13;&#10;&#9;CASE&#13;&#10;&#9;WHEN SUM(BUDGET_FORCST_SALES_AMT) OVER (PARTITION BY PROJECT_ID,TASK_ID ORDER BY 'A')=0&#13;&#10;&#9;THEN 1/COUNT(BUDGET_FORCST_SALES_AMT)&#13;&#10;&#9;OVER (PARTITION BY PROJECT_ID,TASK_ID ORDER BY 'A')&#13;&#10;&#9;ELSE BUDGET_FORCST_SALES_AMT/SUM(BUDGET_FORCST_SALES_AMT)&#13;&#10;&#9;OVER (PARTITION BY PROJECT_ID,TASK_ID ORDER BY 'A')&#13;&#10;&#9;END PRCTG&#13;&#10;&#9;FROM&#13;&#10;&#9;&#9;(SELECT RA.PROJECT_ID,&#13;&#10;&#9;&#9;  RA.TASK_ID,&#13;&#10;&#9;&#9;  TO_CHAR(BL.START_DATE,'YYYYMM') CALENDAR_FISCL_YR_MO_NUM,&#13;&#10;&#9;&#9;  SUM(COALESCE(bl.PROJECT_REVENUE,0)) BUDGET_FORCST_SALES_AMT&#13;&#10;&#9;&#9;FROM&#13;&#10;&#9;&#9;  (select START_DATE,PROJECT_REVENUE,RESOURCE_ASSIGNMENT_ID&#13;&#10;&#9;&#9;&#9;&#9;&#9;  from pgscharlie.PA_BUDGET_LINES) BL,&#13;&#10;&#9;&#9;  (select PROJECT_ID,TASK_ID,RESOURCE_ASSIGNMENT_ID,BUDGET_VERSION_ID&#13;&#10;&#9;&#9;&#9;&#9;&#9;  from pgscharlie.PA_RESOURCE_ASSIGNMENTS) RA,&#13;&#10;&#9;&#9;  (select BUDGET_VERSION_ID,FIN_PLAN_TYPE_ID,BUDGET_STATUS_CODE,CURRENT_FLAG&#13;&#10;&#9;&#9;&#9;&#9;&#9;  from pgscharlie.PA_BUDGET_VERSIONS) BV,&#13;&#10;&#9;&#9;  (select FIN_PLAN_TYPE_ID,name,language from pgscharlie.PA_FIN_PLAN_TYPES_TL) FP&#13;&#10;&#9;&#9;WHERE BL.RESOURCE_ASSIGNMENT_ID      = RA.RESOURCE_ASSIGNMENT_ID&#13;&#10;&#9;&#9;AND RA.BUDGET_VERSION_ID             = BV.BUDGET_VERSION_ID&#13;&#10;&#9;&#9;AND BV.FIN_PLAN_TYPE_ID              = FP.FIN_PLAN_TYPE_ID&#13;&#10;&#9;&#9;AND fp.name                          ='PS_IFS_Forecast Revenue Budget'&#13;&#10;&#9;   AND fp.language                      ='US'&#13;&#10;&#9;&#9;AND bv.BUDGET_STATUS_CODE            ='B'&#13;&#10;&#9;&#9;AND bv.CURRENT_FLAG                  ='Y'&#13;&#10;&#9;&#9;AND TO_CHAR(BL.START_DATE,'YYYYMM') &gt;= TO_CHAR(CURRENT_DATE,'YYYYMM')&#13;&#10;&#9;&#9;GROUP BY RA.PROJECT_ID,&#13;&#10;&#9;&#9;  RA.TASK_ID,&#13;&#10;&#9;&#9;  TO_CHAR(BL.START_DATE,'YYYYMM')&#13;&#10;&#9;&#9;) AAAA&#13;&#10;&#9;  ) BUDGET_PCTG&#13;&#10;&#9;ON ( final.PROJECT_ID =BUDGET_PCTG.PROJECT_ID&#13;&#10;&#9;AND final.TASK_ID     = BUDGET_PCTG.TASK_ID )&#13;&#10;&#9;--on final.project_id=prctg.project_id and final.task_id=prctg.task_id&#13;&#10;&#9;left outer join&#13;&#10;&#9;pgscharlie.gl_daily_rates exg on final.PROJECT_CURRENCY_CODE = exg.FROM_CURRENCY&#13;&#10;&#9;WHERE exg.conversion_type='1001'&#13;&#10;&#9;AND exg.TO_CURRENCY      = 'USD'&#13;&#10;&#9;--and round(final.PROJFUNC_ALLOCATED_AMOUNT- final.FUNC_CURR_SALES_TO_DATE)  &gt; 0&#13;&#10;&#9;--and PROJ_ALL.SEGMENT1 = '10225124' --limit 5;&#13;&#10;&#9;AND CUSTOMER_NAME NOT LIKE '%GE POWER%'&#13;&#10;&#9;)astt) FSC where round(FUNC_CURR_BACKLOG_AMT*COALESCE(PRCTG,1)) &gt; 0&#13;&#10;&#9;group by &#13;&#10;&#9;FSC.PROJ_NUM,ing_quarter--,FUNC_CURR_BACKLOG_AMT,PRCTG&#13;&#10;&#9;order by ing_quarter)t&quot;"/>
    <elementParameter field="MAPPING_TYPE" name="MAPPING" show="false" value="postgres_id"/>
    <elementParameter field="CLOSED_LIST" name="DB_DRIVER" show="false" value="POSTGRESQL"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" show="false" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" value="ISO-8859-15"/>
    <elementParameter field="CHECK" name="USE_CURSOR" value="false"/>
    <elementParameter field="TEXT" name="CURSOR_SIZE" show="false" value="1000"/>
    <elementParameter field="CHECK" name="TRIM_ALL_COLUMN" value="false"/>
    <elementParameter field="TABLE" name="TRIM_COLUMN">
      <elementValue elementRef="SCHEMA_COLUMN" value="project_number"/>
      <elementValue elementRef="TRIM" value="false"/>
      <elementValue elementRef="SCHEMA_COLUMN" value="ing_quarter"/>
      <elementValue elementRef="TRIM" value="false"/>
      <elementValue elementRef="SCHEMA_COLUMN" value="ing_backlog_amount"/>
      <elementValue elementRef="TRIM" value="false"/>
      <elementValue elementRef="SCHEMA_COLUMN" value="ing_cost"/>
      <elementValue elementRef="TRIM" value="false"/>
      <elementValue elementRef="SCHEMA_COLUMN" value="source"/>
      <elementValue elementRef="TRIM" value="false"/>
    </elementParameter>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <metadata connector="FLOW" name="tGreenplumInput_2">
      <column comment="" key="false" length="-1" name="project_number" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="VARCHAR" type="id_String" usefulColumn="true"/>
      <column comment="" key="false" length="-1" name="ing_quarter" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="VARCHAR" type="id_String" usefulColumn="true"/>
      <column comment="" key="false" length="-1" name="ing_backlog_amount" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="FLOAT8" type="id_Double" usefulColumn="true"/>
      <column comment="" key="false" length="-1" name="ing_cost" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="FLOAT8" type="id_Double" usefulColumn="true"/>
      <column comment="" key="false" length="-1" name="source" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="VARCHAR" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tGEGreenplumGPLoad" offsetLabelX="0" offsetLabelY="0" posX="512" posY="96" sizeX="32" sizeY="35">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="tGEGreenplumGPLoad_2"/>
    <elementParameter field="CHECK" name="STARTABLE" show="false" value="true"/>
    <metadata connector="FLOW" name="tGEGreenplumGPLoad_2">
      <column comment="" key="false" length="-1" name="project_number" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="VARCHAR" type="id_String" usefulColumn="true"/>
      <column comment="" key="false" length="-1" name="ing_quarter" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="VARCHAR" type="id_String" usefulColumn="true"/>
      <column comment="" key="false" length="-1" name="ing_backlog_amount" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="FLOAT8" type="id_Double" usefulColumn="true"/>
      <column comment="" key="false" length="-1" name="ing_cost" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="FLOAT8" type="id_Double" usefulColumn="true"/>
      <column comment="" key="false" length="-1" name="source" nullable="true" originalLength="-1" pattern="" precision="-1" sourceType="VARCHAR" type="id_String" usefulColumn="true"/>
    </metadata>
  </node>
  <node componentName="tGreenplumConnection" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="320" posY="192">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tGreenplumConnection_2"/>
    <elementParameter field="TECHNICAL" name="PROPERTY:PROPERTY_TYPE" value="REPOSITORY"/>
    <elementParameter field="TECHNICAL" name="PROPERTY:REPOSITORY_PROPERTY_TYPE" show="false" value="_wlBSUAUFEems6bufoXyGDg"/>
    <elementParameter field="TEXT" name="HOST" value="context.GP_EM_DT_ETL_FSSO_502800684_Server"/>
    <elementParameter field="TEXT" name="TYPE" show="false" value="GREENPLUM"/>
    <elementParameter field="TEXT" name="PORT" value="context.GP_EM_DT_ETL_FSSO_502800684_Port"/>
    <elementParameter field="TEXT" name="DBNAME" value="context.GP_EM_DT_ETL_FSSO_502800684_Database"/>
    <elementParameter field="TEXT" name="SCHEMA_DB" value="context.GP_EM_DT_ETL_FSSO_502800684_Schema"/>
    <elementParameter field="TEXT" name="USER" value="context.GP_EM_DT_ETL_FSSO_502800684_Login"/>
    <elementParameter field="PASSWORD" name="PASS" value="8pW6Nmy2kud5QlYQdAWu3Er4D1OQS62boYHNLAdopv8VyR8EHGdgZ65H88ge7RCm"/>
    <elementParameter field="ENCODING_TYPE" name="ENCODING" show="false" value="&quot;ISO-8859-15&quot;"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" value="ISO-8859-15"/>
    <elementParameter field="CHECK" name="USE_SHARED_CONNECTION" value="false"/>
    <elementParameter field="TEXT" name="SHARED_CONNECTION_NAME" show="false" value=""/>
    <elementParameter field="TEXT" name="PROPERTIES" value="&quot;&quot;"/>
    <elementParameter field="CLOSED_LIST" name="DB_DRIVER" value="POSTGRESQL"/>
    <elementParameter field="CHECK" name="AUTO_COMMIT" value="false"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
  </node>
  <node componentName="tGreenplumClose" componentVersion="0.102" offsetLabelX="0" offsetLabelY="0" posX="160" posY="192">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tGreenplumClose_2"/>
    <elementParameter field="COMPONENT_LIST" name="CONNECTION" value="tGreenplumConnection_1"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
  </node>
  <connection connectorName="SUBJOB_OK" label="OnSubjobOk" lineStyle="1" metaname="tGreenplumConnection_1" offsetLabelX="0" offsetLabelY="0" source="tGreenplumConnection_1" target="tGreenplumInput_1">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="OnSubjobOk1"/>
  </connection>
  <connection connectorName="FLOW" label="row1" lineStyle="0" metaname="tGreenplumInput_1" offsetLabelX="0" offsetLabelY="0" source="tGreenplumInput_1" target="tGEGreenplumGPLoad_1">
    <elementParameter field="TABLE" name="TRACES_CONNECTION_FILTER" show="false">
      <elementValue elementRef="TRACE_COLUMN" value="project_number"/>
      <elementValue elementRef="TRACE_COLUMN_CHECKED" value="true"/>
      <elementValue elementRef="TRACE_COLUMN_CONDITION" value=""/>
      <elementValue elementRef="TRACE_COLUMN" value="ing_backlog_amount"/>
      <elementValue elementRef="TRACE_COLUMN_CHECKED" value="true"/>
      <elementValue elementRef="TRACE_COLUMN_CONDITION" value=""/>
      <elementValue elementRef="TRACE_COLUMN" value="ing_quarter"/>
      <elementValue elementRef="TRACE_COLUMN_CHECKED" value="true"/>
      <elementValue elementRef="TRACE_COLUMN_CONDITION" value=""/>
      <elementValue elementRef="TRACE_COLUMN" value="source"/>
      <elementValue elementRef="TRACE_COLUMN_CHECKED" value="true"/>
      <elementValue elementRef="TRACE_COLUMN_CONDITION" value=""/>
      <elementValue elementRef="TRACE_COLUMN" value="ing_cost"/>
      <elementValue elementRef="TRACE_COLUMN_CHECKED" value="true"/>
      <elementValue elementRef="TRACE_COLUMN_CONDITION" value=""/>
    </elementParameter>
    <elementParameter field="CHECK" name="MONITOR_CONNECTION" value="false"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="row1"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tGEGreenplumGPLoad_1" offsetLabelX="0" offsetLabelY="0" source="tGEGreenplumGPLoad_1" target="tGreenplumClose_2">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="OnComponentOk4"/>
  </connection>
  <connection connectorName="FLOW" label="row2" lineStyle="0" metaname="tGreenplumInput_2" offsetLabelX="0" offsetLabelY="0" source="tGreenplumInput_2" target="tGEGreenplumGPLoad_2">
    <elementParameter field="TABLE" name="TRACES_CONNECTION_FILTER" show="false">
      <elementValue elementRef="TRACE_COLUMN" value="project_number"/>
      <elementValue elementRef="TRACE_COLUMN_CHECKED" value="true"/>
      <elementValue elementRef="TRACE_COLUMN_CONDITION" value=""/>
      <elementValue elementRef="TRACE_COLUMN" value="ing_backlog_amount"/>
      <elementValue elementRef="TRACE_COLUMN_CHECKED" value="true"/>
      <elementValue elementRef="TRACE_COLUMN_CONDITION" value=""/>
      <elementValue elementRef="TRACE_COLUMN" value="ing_quarter"/>
      <elementValue elementRef="TRACE_COLUMN_CHECKED" value="true"/>
      <elementValue elementRef="TRACE_COLUMN_CONDITION" value=""/>
      <elementValue elementRef="TRACE_COLUMN" value="source"/>
      <elementValue elementRef="TRACE_COLUMN_CHECKED" value="true"/>
      <elementValue elementRef="TRACE_COLUMN_CONDITION" value=""/>
      <elementValue elementRef="TRACE_COLUMN" value="ing_cost"/>
      <elementValue elementRef="TRACE_COLUMN_CHECKED" value="true"/>
      <elementValue elementRef="TRACE_COLUMN_CONDITION" value=""/>
    </elementParameter>
    <elementParameter field="CHECK" name="MONITOR_CONNECTION" value="false"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="row2"/>
  </connection>
  <connection connectorName="COMPONENT_OK" label="OnComponentOk" lineStyle="3" metaname="tGEGreenplumGPLoad_2" offsetLabelX="0" offsetLabelY="0" source="tGEGreenplumGPLoad_2" target="tGreenplumClose_1">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="OnComponentOk1"/>
  </connection>
  <connection connectorName="SUBJOB_OK" label="OnSubjobOk" lineStyle="1" metaname="tGreenplumConnection_2" offsetLabelX="0" offsetLabelY="0" source="tGreenplumConnection_2" target="tGreenplumInput_2">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="OnSubjobOk3"/>
  </connection>
  <connection connectorName="SUBJOB_OK" label="OnSubjobOk" lineStyle="1" metaname="tGreenplumClose_2" offsetLabelX="0" offsetLabelY="0" source="tGreenplumClose_2" target="tGreenplumConnection_2">
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="OnSubjobOk2"/>
  </connection>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tGreenplumConnection_1"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" show="false" value="92;131;150"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tGreenplumInput_1"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" show="false" value="92;131;150"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tGreenplumClose_1"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" show="false" value="92;131;150"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tGreenplumInput_2"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" show="false" value="92;131;150"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tGreenplumConnection_2"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" show="false" value="92;131;150"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
  <subjob>
    <elementParameter field="TEXT" name="UNIQUE_NAME" show="false" value="tGreenplumClose_2"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" show="false" value="92;131;150"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="207;226;236"/>
  </subjob>
<Signature xmlns="http://www.w3.org/2000/09/xmldsig#" Id="_356142b0-5a89-4fc5-ae79-865d67181276"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/><SignatureMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha512"/><Reference URI=""><Transforms><Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/></Transforms><DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha512"/><DigestValue>FtiX6ARCSjPcpM6ve0Qggd5wA9FA+X9YKA4E0lWQYijRF7qzpbcQ1ShA/l83ECP9g4h4AatX9Ush
fWa6x2yNJA==</DigestValue></Reference><Reference Type="http://www.w3.org/2000/09/xmldsig#SignatureProperties" URI="#_b8d996fa-0122-46b0-8639-e76693ff6e5a"><Transforms><Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/></Transforms><DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha512"/><DigestValue>8SizzxXJO33wNHEVIfYuhmkYefq5kTIbkDzA64PpJSVQLzwJUWSccZO2XrgaTh6eu3BIwY8DtZbi
LPSh2trIPQ==</DigestValue></Reference></SignedInfo><SignatureValue>WKmpiwYtlcFyUhGOd2dvTN+n73vO47gvLzxv/uCuczVaaAvRqMb771Fy4zRAOmNAMbreipvpajhb
ZyLYeiBx970jYsrtBSuXGgS/vTxv6UrkjBpvPYskd8hr1z/YxY7V98rUkh67twnjTSLjTMsf45IO
ObNafBYJ7wB3zWoBkPx0rLWPdxr4QJ8wncFi2+LfU1IOKyMAuwBYgMmk+XJ5jwYqMMKIAtbRIQ53
Y6VWv1xl/YXepuXOT6fYhmGaZ9L2rxcD3yDYPeKEB+/rjIJVpgiYUSeziiVDxdJin8yUvQaxNHwF
0HGOMxBn56+x3IY+5c/5nfJIfhP8poYQYcuMBw==</SignatureValue><KeyInfo><X509Data><X509SubjectName>C=FR,ST=Paris,L=Paris,O=Talend Inc.,OU=R&amp;D,CN=Talend Code Signing certificate</X509SubjectName><X509Certificate>MIIFADCCAuigAwIBAgIIA2OsD6bRyj0wDQYJKoZIhvcNAQELBQAwgY0xCzAJBgNVBAYTAkZSMQ4w
DAYDVQQIEwVQYXJpczEOMAwGA1UEBxMFUGFyaXMxFDASBgNVBAoTC1RhbGVuZCBJbmMuMQwwCgYD
VQQLDANSJkQxFjAUBgNVBAMMDVRhbGVuZCBSJkQgQ0ExIjAgBgkqhkiG9w0BCQEWE3NlY3VyaXR5
QHRhbGVuZC5jb20wHhcNMTkwNjAzMDgxODIwWhcNMjkwNjAzMDAwMDAwWjB7MSgwJgYDVQQDEx9U
YWxlbmQgQ29kZSBTaWduaW5nIGNlcnRpZmljYXRlMQwwCgYDVQQLDANSJkQxFDASBgNVBAoTC1Rh
bGVuZCBJbmMuMQ4wDAYDVQQHEwVQYXJpczEOMAwGA1UECBMFUGFyaXMxCzAJBgNVBAYTAkZSMIIB
IjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAp5TMF8BmRt8dY51t9kIDdDkoOKVVytJN2gn2
DhMGi8hzpUofNDykJDhe9SPqyJdGZ6o/h7laTA0/CivKyPT1OJQ9E2gMHKs8cTZM/cO2w0Atlqkl
alIxepol0DNnUtmECVBqdnVsJesfmdoeptxgJAtxYbquFsTsrATNY2cscXpwmOca/Ewip48WQLFx
e5s067jaIsAQGRIqpIup3bOtWBySrtImJ40lQCPeEcl96qzkv3utaVaNc3ukkhYkCDbMbK8NVd1B
CVeeIBAe+n/SdpHH20o+6eIiZecsBGDLwlTYrFvuVqAa6xI7y8Vdz6irjPAVBEtG/iOc782aJ/lZ
TwIDAQABo3UwczAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIHgDATBgNVHSUEDDAKBggrBgEF
BQcDAzAdBgNVHQ4EFgQUGdfzQEbjQnANq28sfhEMTx+rsOcwHwYDVR0jBBgwFoAU530Lcvy1gZnG
gCvZLOyCczK1qPcwDQYJKoZIhvcNAQELBQADggIBAEr22wnaQwZm2dhbUCqD+qZpTq2AF/tzxqAM
eL/CiTjPbTblS4SNNwCKvTgMe9ucpUbenXmK7xE+DU9dN4om+t3VHbkOLQVyuLcd2WGsy7ZGwRvA
f+TFwLbwjyTukOGm6Sd1qyZgvCPzBsKnft6vscvGy2yEpmFCeHJyBP8pvchg607zguRdNbkGYZXw
G6jNipAbTtzdPTFKKr1bEf0sUGqMrlZIMPjflh2Vewu8ImNdX5IZdvBD6DdFVOC5wqV6u+W9ukE/
mXZxDBYNl2AF7FTh04ucEVN3mHv7m2L0uFvUlhxchcagJhJsdQG+A0LVCemHbp6CSNQJx02KxqUG
hakvpzhOyLo91h8YAQrEZJdNuKA8IYmBrFZQZDCz0uywKSyFfzPyJhvxylCLG/iDPPfE0VWcrMJ/
WQJly/2XPg/NBCTF3pSKS0kCiA7PeaI3cWkMYYA3PMwYDvzqs1opBRglG7ikj0bQxSm3lcjMuuvW
gBRksFKjP3K/nztsjSoYITOM9jR29ReIL3v0E8RbAFwA2RGq6Dxd0ixfbucMesy5Gnr8tfYy6rW+
qSQqd3ah4+PSzBNVwIB4ytpdrG3SlhCI2i2Th8ek8Sjsaquh9qPAerWNd2+84HWOOGj1Xe1qc6vg
qqu6JoK9EXKDiwBqDVkueIa+MhamE1VDnhn2pPui</X509Certificate></X509Data></KeyInfo><Object><SignatureProperties><SignatureProperty Id="_b8d996fa-0122-46b0-8639-e76693ff6e5a" Target="#_356142b0-5a89-4fc5-ae79-865d67181276"><Timestamp>2020-05-15 13:13:42</Timestamp></SignatureProperty></SignatureProperties></Object></Signature></talendfile:ProcessType>