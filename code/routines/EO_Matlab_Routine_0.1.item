package routines;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.Calendar;

import com.ge.energy.ssg.framework.util.blob.BlobUtil;




/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class EO_Matlab_Routine {



	public static byte[] convertToBlob(String FILE_PATH,int noOfTable){
		BufferedReader br = null;
		// String blobData = null;
		byte[] binaryData =null;
		try {
			String line;
			String str="";
			//m --- no of tables
			int i=0;
			String[] table = new String[noOfTable];
			String[] value = new String[noOfTable];

			boolean flag=false;
			// String FILE_PATH = "C:\\Users\\672264\\Desktop\\table.txt";
			br = new BufferedReader(new FileReader(FILE_PATH));
			while ((line = br.readLine()) != null) {
				if(line.length()>6){
					if(line.substring(0, 6).equalsIgnoreCase("table:"))
					{
						if(i!=0)flag=true;
						table[i]=line.substring(6);
						i++;
					}
					else
					{
						if(flag){
							value[i-2]=str;
							str="";
							flag=false;
						}
						str+=line+"\n";
					}
				}
			}
			value[i-1]=str;
			// 
			String[][] input = new String[noOfTable][2];
			for(int j=0;j<noOfTable;j++)
			{
				input[j][0]=table[j].toString();
				input[j][1]=value[j].toString();
			}

			// System.out.println("input data:"+input[0][1]);
			binaryData = (new BlobUtil()).convertObjectToByteArray(input);
			// System.out.println("\nBinary Array: "+ binaryData);
			// blobData = (new BlobUtil()).convertObjectToBlob(input);
			// System.out.println("\nBlob Data: "+ blobData);

		}catch(Exception e){
			System.out.println("Error occurred");
		}
		return binaryData;
	}


}




