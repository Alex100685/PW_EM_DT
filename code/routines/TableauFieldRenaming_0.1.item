package routines;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class TableauFieldRenaming {

	public static void InitCap(String Inputfile) throws IOException{
		BufferedReader br = new BufferedReader(new FileReader(Inputfile));
		try {
		 
		  StringBuilder sb = new StringBuilder();
		  String line = br.readLine();
		  while (line != null) {    
		  if(line.contains(" caption=") && line.contains("<column ")){
		  int position1=line.indexOf("caption='");
		  ArrayList<Integer> positions = new ArrayList<>();
		  for(int i=position1+9;i<line.length();i++){
		  if (line.charAt(i)=='\'') {
		          positions.add(i);
		       }
		  }
		  int count;
		  String column_=line.substring(position1+9, positions.get(0));
		  String column=line.substring(position1+9, positions.get(0));
		  String Column1="";
		  String Column2;
		  List<String> split = new ArrayList<>();
		  if(column_.contains("_")){
		  Column2=column_.replace("_"," ");  
		  }else{
		  Column2=column_;
		  }
		  split=Arrays.asList(Column2.split("\\s+"));
		  
		  for(int i=0;i<split.size();i++){
		  String name=split.get(i);
		  name=name.substring(0, 1).toUpperCase() + name.substring(1);
		  Column1+=name+" ";
		  }
		  String line1=line.replace("'"+column+"'", "'"+Column1.trim()+"'");
		  System.out.println(column+" || is renamed to || "+Column1.trim());
		  sb.append(line1);
		      sb.append(System.lineSeparator());
		      line = br.readLine(); 
		  }else{
		  sb.append(line);
		      sb.append(System.lineSeparator());
		      line = br.readLine(); 
		  }
		      
		  }
		  BufferedWriter bwr = new BufferedWriter(new FileWriter(new File(Inputfile)));
		       
		       //write contents of StringBuffer to a file
		       bwr.write(sb.toString());
		      
		       //flush the stream
		       bwr.flush();
		      
		       //close the stream
		       bwr.close();
		  String everything = sb.toString();
		  
		}finally{
		br.close();
		}
		}
	public static void replace(String Inputfile,String name,String with) throws IOException{
	BufferedReader br = new BufferedReader(new FileReader(Inputfile));
	try {
	 
	  StringBuilder sb = new StringBuilder();
	  String line = br.readLine();
	  while (line != null) {
	  if(line.contains(" caption=") && line.contains("<column ")){
	  int position1=line.indexOf("caption='");
	  ArrayList<Integer> positions = new ArrayList<>();
	  for(int i=position1+9;i<line.length();i++){
	  if (line.charAt(i)=='\'') {
	          positions.add(i);
	       }
	  }
	  int count;
	  String column_=line.substring(position1+9, positions.get(0));
	  String column=line.substring(position1+9, positions.get(0));
	  String Column1;
	  List<String> split = new ArrayList<>();
	  split=Arrays.asList(column_.split("\\s+"));
	  if(column_.equals(name)){
	  Column1=column_.replace(name, with);
	  }
	  else if(split.get(0).equals(name)){
	  Column1=column_.replace(name+" ", with+" ");
	  }else if(split.get(split.size()-1).equals(name)){
	  Column1=column_.replace(" "+name," "+with);
	  }else{
	  Column1=column_.replace(" "+name+" ", " "+with+" ");
	  }
	  
	  String line1=line.replace("'"+column+"'", "'"+Column1+"'");
	  System.out.println(column+" || is renamed to || "+Column1.trim());
	  sb.append(line1);
	      sb.append(System.lineSeparator());
	      line = br.readLine(); 
	  }else{
	  sb.append(line);
	      sb.append(System.lineSeparator());
	      line = br.readLine(); 
	  }
	      
	  }
	  BufferedWriter bwr = new BufferedWriter(new FileWriter(new File(Inputfile)));
	       
	       //write contents of StringBuffer to a file
	       bwr.write(sb.toString());
	      
	       //flush the stream
	       bwr.flush();
	      
	       //close the stream
	       bwr.close();
	  String everything = sb.toString();
	  
	}finally{
	br.close();
	}
	}
}
